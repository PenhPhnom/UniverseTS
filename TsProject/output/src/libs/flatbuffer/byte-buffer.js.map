{"version":3,"file":"byte-buffer.js","sourceRoot":"","sources":["../../../../src/libs/flatbuffer/byte-buffer.ts"],"names":[],"mappings":"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","sourcesContent":["import { FILE_IDENTIFIER_LENGTH, SIZEOF_INT } from \"./constants\";\r\nimport { Long } from \"./long\";\r\nimport { int32, isLittleEndian, float32, float64 } from \"./utils\";\r\nimport { Offset, Table, IGeneratedObject } from \"./types\";\r\nimport { Encoding } from \"./encoding\";\r\n\r\nexport class ByteBuffer {\r\n    private position_ = 0;\r\n  \r\n    /**\r\n     * Create a new ByteBuffer with a given array of bytes (`Uint8Array`)\r\n     */\r\n    constructor(private bytes_: Uint8Array) { }\r\n  \r\n    /**\r\n     * Create and allocate a new ByteBuffer with a given size.\r\n     */\r\n    static allocate(byte_size: number): ByteBuffer {\r\n      return new ByteBuffer(new Uint8Array(byte_size));\r\n    }\r\n  \r\n    clear(): void {\r\n      this.position_ = 0;\r\n    }\r\n  \r\n    /**\r\n     * Get the underlying `Uint8Array`.\r\n     */\r\n    bytes(): Uint8Array {\r\n      return this.bytes_;\r\n    }\r\n  \r\n    /**\r\n     * Get the buffer's position.\r\n     */\r\n    position(): number {\r\n      return this.position_;\r\n    }\r\n  \r\n    /**\r\n     * Set the buffer's position.\r\n     */\r\n    setPosition(position: number): void {\r\n      this.position_ = position;\r\n    }\r\n  \r\n    /**\r\n     * Get the buffer's capacity.\r\n     */\r\n    capacity(): number {\r\n      return this.bytes_.length;\r\n    }\r\n  \r\n    readInt8(offset: number): number {\r\n      return this.readUint8(offset) << 24 >> 24;\r\n    }\r\n  \r\n    readUint8(offset: number): number {\r\n      return this.bytes_[offset];\r\n    }\r\n  \r\n    readInt16(offset: number): number {\r\n      return this.readUint16(offset) << 16 >> 16;\r\n    }\r\n  \r\n    readUint16(offset: number): number {\r\n      return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\r\n    }\r\n  \r\n    readInt32(offset: number): number {\r\n      return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\r\n    }\r\n  \r\n    readUint32(offset: number): number {\r\n      return this.readInt32(offset) >>> 0;\r\n    }\r\n  \r\n    readInt64(offset: number): Long {\r\n      return new Long(this.readInt32(offset), this.readInt32(offset + 4));\r\n    }\r\n  \r\n    readUint64(offset: number): Long {\r\n      return new Long(this.readUint32(offset), this.readUint32(offset + 4));\r\n    }\r\n  \r\n    readFloat32(offset: number): number {\r\n      int32[0] = this.readInt32(offset);\r\n      return float32[0];\r\n    }\r\n  \r\n    readFloat64(offset: number): number {\r\n      int32[isLittleEndian ? 0 : 1] = this.readInt32(offset);\r\n      int32[isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\r\n      return float64[0];\r\n    }\r\n  \r\n    writeInt8(offset: number, value: number): void {\r\n      this.bytes_[offset] = value;\r\n    }\r\n  \r\n    writeUint8(offset: number, value: number): void {\r\n      this.bytes_[offset] = value;\r\n    }\r\n  \r\n    writeInt16(offset: number, value: number): void {\r\n      this.bytes_[offset] = value;\r\n      this.bytes_[offset + 1] = value >> 8;\r\n    }\r\n  \r\n    writeUint16(offset: number, value: number): void {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n    }\r\n  \r\n    writeInt32(offset: number, value: number): void {\r\n      this.bytes_[offset] = value;\r\n      this.bytes_[offset + 1] = value >> 8;\r\n      this.bytes_[offset + 2] = value >> 16;\r\n      this.bytes_[offset + 3] = value >> 24;\r\n    }\r\n  \r\n    writeUint32(offset: number, value: number): void {\r\n        this.bytes_[offset] = value;\r\n        this.bytes_[offset + 1] = value >> 8;\r\n        this.bytes_[offset + 2] = value >> 16;\r\n        this.bytes_[offset + 3] = value >> 24;\r\n    }\r\n  \r\n    writeInt64(offset: number, value: Long): void {\r\n      this.writeInt32(offset, value.low);\r\n      this.writeInt32(offset + 4, value.high);\r\n    }\r\n  \r\n    writeUint64(offset: number, value: Long): void {\r\n        this.writeUint32(offset, value.low);\r\n        this.writeUint32(offset + 4, value.high);\r\n    }\r\n  \r\n    writeFloat32(offset: number, value: number): void {\r\n      float32[0] = value;\r\n      this.writeInt32(offset, int32[0]);\r\n    }\r\n  \r\n    writeFloat64(offset: number, value: number): void {\r\n      float64[0] = value;\r\n      this.writeInt32(offset, int32[isLittleEndian ? 0 : 1]);\r\n      this.writeInt32(offset + 4, int32[isLittleEndian ? 1 : 0]);\r\n    }\r\n  \r\n    /**\r\n     * Return the file identifier.   Behavior is undefined for FlatBuffers whose\r\n     * schema does not include a file_identifier (likely points at padding or the\r\n     * start of a the root vtable).\r\n     */\r\n    getBufferIdentifier(): string {\r\n      if (this.bytes_.length < this.position_ + SIZEOF_INT +\r\n          FILE_IDENTIFIER_LENGTH) {\r\n        throw new Error(\r\n            'FlatBuffers: ByteBuffer is too short to contain an identifier.');\r\n      }\r\n      let result = \"\";\r\n      for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\r\n        result += String.fromCharCode(\r\n            this.readInt8(this.position_ + SIZEOF_INT + i));\r\n      }\r\n      return result;\r\n    }\r\n  \r\n    /**\r\n     * Look up a field in the vtable, return an offset into the object, or 0 if the\r\n     * field is not present.\r\n     */\r\n    __offset(bb_pos: number, vtable_offset: number): Offset {\r\n      const vtable = bb_pos - this.readInt32(bb_pos);\r\n      return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\r\n    }\r\n  \r\n    /**\r\n     * Initialize any Table-derived type to point to the union at the given offset.\r\n     */\r\n    __union(t: Table, offset: number): Table {\r\n      t.bb_pos = offset + this.readInt32(offset);\r\n      t.bb = this;\r\n      return t;\r\n    }\r\n  \r\n    /**\r\n     * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\r\n     * This allocates a new string and converts to wide chars upon each access.\r\n     *\r\n     * To avoid the conversion to UTF-16, pass Encoding.UTF8_BYTES as\r\n     * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\r\n     * and from UTF-16 when the data will just be packaged back up in another\r\n     * FlatBuffer later on.\r\n     *\r\n     * @param offset\r\n     * @param opt_encoding Defaults to UTF16_STRING\r\n     */\r\n    __string(offset: number, opt_encoding?: Encoding): string | Uint8Array {\r\n      offset += this.readInt32(offset);\r\n  \r\n      const length = this.readInt32(offset);\r\n      let result = '';\r\n      let i = 0;\r\n  \r\n      offset += SIZEOF_INT;\r\n  \r\n      if (opt_encoding === Encoding.UTF8_BYTES) {\r\n        return this.bytes_.subarray(offset, offset + length);\r\n      }\r\n  \r\n      while (i < length) {\r\n        let codePoint;\r\n  \r\n        // Decode UTF-8\r\n        const a = this.readUint8(offset + i++);\r\n        if (a < 0xC0) {\r\n          codePoint = a;\r\n        } else {\r\n          const b = this.readUint8(offset + i++);\r\n          if (a < 0xE0) {\r\n            codePoint =\r\n              ((a & 0x1F) << 6) |\r\n              (b & 0x3F);\r\n          } else {\r\n            const c = this.readUint8(offset + i++);\r\n            if (a < 0xF0) {\r\n              codePoint =\r\n                ((a & 0x0F) << 12) |\r\n                ((b & 0x3F) << 6) |\r\n                (c & 0x3F);\r\n            } else {\r\n              const d = this.readUint8(offset + i++);\r\n              codePoint =\r\n                ((a & 0x07) << 18) |\r\n                ((b & 0x3F) << 12) |\r\n                ((c & 0x3F) << 6) |\r\n                (d & 0x3F);\r\n            }\r\n          }\r\n        }\r\n  \r\n        // Encode UTF-16\r\n        if (codePoint < 0x10000) {\r\n          result += String.fromCharCode(codePoint);\r\n        } else {\r\n          codePoint -= 0x10000;\r\n          result += String.fromCharCode(\r\n            (codePoint >> 10) + 0xD800,\r\n            (codePoint & ((1 << 10) - 1)) + 0xDC00);\r\n        }\r\n      }\r\n  \r\n      return result;\r\n    }\r\n  \r\n    /**\r\n     * Handle unions that can contain string as its member, if a Table-derived type then initialize it, \r\n     * if a string then return a new one\r\n     * \r\n     * WARNING: strings are immutable in JS so we can't change the string that the user gave us, this \r\n     * makes the behaviour of __union_with_string different compared to __union\r\n     */\r\n    __union_with_string(o: Table | string, offset: number) : Table | string {\r\n      if(typeof o === 'string') {\r\n        return this.__string(offset) as string;\r\n      } \r\n      return this.__union(o, offset);\r\n    }\r\n  \r\n    /**\r\n     * Retrieve the relative offset stored at \"offset\"\r\n     */\r\n    __indirect(offset: Offset): Offset {\r\n      return offset + this.readInt32(offset);\r\n    }\r\n  \r\n    /**\r\n     * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\r\n     */\r\n    __vector(offset: Offset): Offset {\r\n      return offset + this.readInt32(offset) + SIZEOF_INT; // data starts after the length\r\n    }\r\n  \r\n    /**\r\n     * Get the length of a vector whose offset is stored at \"offset\" in this object.\r\n     */\r\n    __vector_len(offset: Offset): Offset {\r\n      return this.readInt32(offset + this.readInt32(offset));\r\n    }\r\n  \r\n    __has_identifier(ident: string): boolean {\r\n      if (ident.length != FILE_IDENTIFIER_LENGTH) {\r\n        throw new Error('FlatBuffers: file identifier must be length ' +\r\n                        FILE_IDENTIFIER_LENGTH);\r\n      }\r\n      for (let i = 0; i < FILE_IDENTIFIER_LENGTH; i++) {\r\n        if (ident.charCodeAt(i) != this.readInt8(this.position() + SIZEOF_INT + i)) {\r\n          return false;\r\n        }\r\n      }\r\n      return true;\r\n    }\r\n  \r\n    /**\r\n     * A helper function to avoid generated code depending on this file directly.\r\n     */\r\n    createLong(low: number, high: number): Long {\r\n      return Long.create(low, high);\r\n    }\r\n  \r\n    /**\r\n     * A helper function for generating list for obj api\r\n     */\r\n    createScalarList(listAccessor: (i: number) => unknown, listLength: number) : unknown[] {\r\n      const ret: unknown[] = [];\r\n      for(let i = 0; i < listLength; ++i) {\r\n        if(listAccessor(i) !== null) {\r\n          ret.push(listAccessor(i));\r\n        }\r\n      }\r\n  \r\n      return ret;\r\n    }\r\n  \r\n    /**\r\n     * This function is here only to get around typescript type system\r\n     */\r\n    createStringList(listAccessor: (i: number) => unknown, listLength: number): unknown[] {\r\n      return this.createScalarList(listAccessor, listLength);\r\n    }\r\n  \r\n    /**\r\n     * A helper function for generating list for obj api\r\n     * @param listAccessor function that accepts an index and return data at that index\r\n     * @param listLength listLength\r\n     * @param res result list\r\n     */\r\n    createObjList(listAccessor: (i: number) => IGeneratedObject, listLength: number): IGeneratedObject[] {\r\n      const ret: IGeneratedObject[] = [];\r\n      for(let i = 0; i < listLength; ++i) {\r\n        const val = listAccessor(i);\r\n        if(val !== null) {\r\n          ret.push(val.unpack());\r\n        }\r\n      }\r\n      \r\n      return ret;\r\n    }\r\n  \r\n  }"]}