{"version":3,"file":"value-type-util.js","sourceRoot":"","sources":["../../../../../src/libs/flatbuffer/flexbuffers/value-type-util.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,SAAS,EAAE,MAAM,cAAc,CAAA;AAExC,MAAM,UAAU,QAAQ,CAAC,KAAgB;IACvC,OAAO,KAAK,KAAK,SAAS,CAAC,IAAI;WAC1B,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC;AAChC,CAAC;AAED,MAAM,UAAU,QAAQ,CAAC,KAAgB;IACvC,OAAO,KAAK,IAAI,SAAS,CAAC,GAAG;WACxB,KAAK,IAAI,SAAS,CAAC,KAAK,CAAC;AAChC,CAAC;AAED,MAAM,UAAU,gBAAgB,CAAC,KAAgB;IAC/C,OAAO,KAAK,IAAI,SAAS,CAAC,YAAY;WACjC,KAAK,IAAI,SAAS,CAAC,cAAc,CAAC;AACzC,CAAC;AAED,MAAM,UAAU,oBAAoB,CAAC,KAAgB;IACnD,OAAO,KAAK,KAAK,SAAS,CAAC,IAAI;WAC1B,CAAC,KAAK,IAAI,SAAS,CAAC,GAAG;eACrB,KAAK,IAAI,SAAS,CAAC,MAAM,CAAC,CAAC;AACpC,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,KAAgB;IAC5C,OAAO,KAAK,KAAK,SAAS,CAAC,WAAW;WACjC,CAAC,KAAK,IAAI,SAAS,CAAC,UAAU;eAC5B,KAAK,IAAI,SAAS,CAAC,wBAAwB,CAAC,CAAC;AACtD,CAAC;AAED,MAAM,UAAU,kBAAkB,CAAC,KAAgB;IACjD,OAAO,KAAK,IAAI,SAAS,CAAC,WAAW;WAChC,KAAK,IAAI,SAAS,CAAC,aAAa,CAAC;AACxC,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,KAAgB;IACxC,OAAO,aAAa,CAAC,KAAK,CAAC;WACtB,kBAAkB,CAAC,KAAK,CAAC;WACzB,KAAK,KAAK,SAAS,CAAC,MAAM,CAAC;AAClC,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,SAAoB,EAAE,MAAc;IAChE,IAAI,MAAM,KAAK,CAAC;QAAE,OAAO,SAAS,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,UAAU,CAAC;IAC1E,IAAI,MAAM,KAAK,CAAC;QAAE,OAAO,SAAS,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,WAAW,CAAC;IAC3E,IAAI,MAAM,KAAK,CAAC;QAAE,OAAO,SAAS,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,WAAW,CAAC;IAC3E,IAAI,MAAM,KAAK,CAAC;QAAE,OAAO,SAAS,GAAG,SAAS,CAAC,GAAG,GAAG,SAAS,CAAC,WAAW,CAAC;IAC3E,MAAM,oBAAoB,GAAG,MAAM,CAAC;AACtC,CAAC;AAED,MAAM,UAAU,sBAAsB,CAAC,SAAoB;IACzD,OAAO,SAAS,GAAG,SAAS,CAAC,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC;AAC1D,CAAC;AAED,MAAM,UAAU,2BAA2B,CAAC,SAAoB;IAC9D,OAAO,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC;AACnE,CAAC;AAED,MAAM,UAAU,2BAA2B,CAAC,SAAoB;IAC9D,0FAA0F;IAC1F,OAAO,CAAC,CAAC,CAAC,SAAS,GAAG,SAAS,CAAC,WAAW,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AAC9D,CAAC;AAED,MAAM,UAAU,UAAU,CAAC,SAAoB,EAAE,QAAgB;IAC/D,OAAO,QAAQ,GAAG,CAAC,SAAS,IAAI,CAAC,CAAC,CAAC;AACrC,CAAC","sourcesContent":["import { ValueType } from './value-type'\r\n\r\nexport function isInline(value: ValueType): boolean {\r\n  return value === ValueType.BOOL\r\n    || value <= ValueType.FLOAT;\r\n}\r\n\r\nexport function isNumber(value: ValueType): boolean {\r\n  return value >= ValueType.INT\r\n    && value <= ValueType.FLOAT;\r\n}\r\n\r\nexport function isIndirectNumber(value: ValueType): boolean {\r\n  return value >= ValueType.INDIRECT_INT\r\n    && value <= ValueType.INDIRECT_FLOAT;\r\n}\r\n\r\nexport function isTypedVectorElement(value: ValueType): boolean {\r\n  return value === ValueType.BOOL\r\n    || (value >= ValueType.INT\r\n      && value <= ValueType.STRING);\r\n}\r\n\r\nexport function isTypedVector(value: ValueType): boolean {\r\n  return value === ValueType.VECTOR_BOOL\r\n    || (value >= ValueType.VECTOR_INT\r\n      && value <= ValueType.VECTOR_STRING_DEPRECATED);\r\n}\r\n\r\nexport function isFixedTypedVector(value: ValueType): boolean {\r\n  return value >= ValueType.VECTOR_INT2\r\n    && value <= ValueType.VECTOR_FLOAT4;\r\n}\r\n\r\nexport function isAVector(value: ValueType): boolean {\r\n  return isTypedVector(value)\r\n    || isFixedTypedVector(value)\r\n    || value === ValueType.VECTOR;\r\n}\r\n\r\nexport function toTypedVector(valueType: ValueType, length: number): ValueType {\r\n  if (length === 0) return valueType - ValueType.INT + ValueType.VECTOR_INT;\r\n  if (length === 2) return valueType - ValueType.INT + ValueType.VECTOR_INT2;\r\n  if (length === 3) return valueType - ValueType.INT + ValueType.VECTOR_INT3;\r\n  if (length === 4) return valueType - ValueType.INT + ValueType.VECTOR_INT4;\r\n  throw \"Unexpected length \" + length;\r\n}\r\n\r\nexport function typedVectorElementType(valueType: ValueType): ValueType {\r\n  return valueType - ValueType.VECTOR_INT + ValueType.INT;\r\n}\r\n\r\nexport function fixedTypedVectorElementType(valueType: ValueType): ValueType {\r\n  return ((valueType - ValueType.VECTOR_INT2) % 3) + ValueType.INT;\r\n}\r\n\r\nexport function fixedTypedVectorElementSize(valueType: ValueType): ValueType {\r\n  // The x / y >> 0 trick is to have an int division. Suppose to be faster than Math.floor()\r\n  return (((valueType - ValueType.VECTOR_INT2) / 3) >> 0) + 2;\r\n}\r\n\r\nexport function packedType(valueType: ValueType, bitWidth: number): ValueType {\r\n  return bitWidth | (valueType << 2);\r\n}"]}