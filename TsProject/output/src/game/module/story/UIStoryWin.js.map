{"version":3,"file":"UIStoryWin.js","sourceRoot":"","sources":["../../../../../src/game/module/story/UIStoryWin.ts"],"names":[],"mappings":"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","sourcesContent":["import { FairyGUI } from \"csharp\";\r\nimport { Choice } from \"inkjs/engine/Choice\";\r\nimport { storyUI } from \"../../../data/ui/story\";\r\nimport { binder } from \"../../../framework/common/NiceDecorator\";\r\nimport { StoryMessageManager } from \"../../../framework/ink/StoryMessageManager\";\r\nimport { Logger } from \"../../../framework/logger/Logger\";\r\nimport { UIWindow } from \"../../../framework/ui/UIWindow\";\r\nimport { S} from \"../../../global/GameConfig\";\r\n\r\nexport class UIStoryWin extends UIWindow{\r\n\r\n    @binder(\"speakerTxt\")\r\n    private m_speakerTxt:FairyGUI.GRichTextField;\r\n    @binder(\"btnList\")\r\n    private m_btnList:FairyGUI.GList;\r\n\r\n    private shouldContineStory:boolean = false;\r\n    private optionsMap:Map<number,string> = new Map<number,string>();\r\n    private allChoices:Choice[];\r\n\r\n    public onAwake():void{\r\n        super.onAwake();\r\n\r\n        this.m_btnList.itemRenderer = (index:number, obj:FairyGUI.GObject)=>{\r\n            this.renderBtnList(index, obj);\r\n        }\r\n\r\n        this.m_btnList.onClickItem.Add((event:FairyGUI.EventContext)=>{\r\n             let clickId:number = this.m_btnList.GetChildIndex(event.data);\r\n            if(this.shouldContineStory){\r\n                S.StoryManager.advanceStory();\r\n            }else{\r\n                this.optionsMap.clear();\r\n                S.StoryManager.selectChoice(this.allChoices[clickId])\r\n            }\r\n        });\r\n    }\r\n\r\n    public onShow(vo:any):void{\r\n        super.onShow(vo);\r\n\r\n        S.StoryMessageManager.addListener(\r\n            StoryMessageManager.ONCONTENTREADY,\r\n            this,\r\n            this.OnContentReady\r\n        );\r\n        S.StoryMessageManager.addListener(\r\n            StoryMessageManager.ONCHOICESPRESENTED,\r\n            this,\r\n            this.OnChoicesPresented\r\n        );\r\n        S.StoryMessageManager.addListener(\r\n            StoryMessageManager.ONSTORYFINISHED,\r\n            this,\r\n            this.OnStoryFinished\r\n        );\r\n        \r\n        this.optionsMap.clear();\r\n        this.shouldContineStory = false;\r\n\r\n        S.StoryManager.beginStory(\"story2\");\r\n    }\r\n\r\n\r\n    private OnContentReady(\r\n        speakerContent:string,\r\n        speakerId:string,\r\n        currentTags:string[],\r\n        currentChoices:Choice[])\r\n    {\r\n        this.m_speakerTxt.text = speakerContent;\r\n\r\n        if(S.StoryManager.canContinue){\r\n            this.shouldContineStory = true;\r\n\r\n            this.m_btnList.numItems = 1;\r\n        }\r\n\r\n        if(currentChoices.length>0){\r\n            this.allChoices = currentChoices;\r\n            this.shouldContineStory = false;\r\n\r\n            let len = currentChoices.length;\r\n            for(let i=0; i < len; i++){\r\n                this.optionsMap.set(i, currentChoices[i].text);\r\n            }\r\n\r\n            this.m_btnList.numItems = len;\r\n        }\r\n    }\r\n\r\n    private renderBtnList(index:number, obj:FairyGUI.GObject){\r\n        let continueBtn:FairyGUI.GButton = obj.asButton;\r\n        \r\n        if(this.optionsMap.size>0){\r\n            continueBtn.text = this.optionsMap.get(index);\r\n\r\n        }else{\r\n            continueBtn.text = \"点击继续\";\r\n        }\r\n    }\r\n\r\n    private OnChoicesPresented(currentChoices:Choice[]){\r\n      \r\n        this.shouldContineStory = false;\r\n        Logger.log(\"....OnChoicesPresented......\")\r\n    }\r\n\r\n    private OnStoryFinished():void{\r\n\r\n        Logger.log(\"Story Finished\")\r\n\r\n        S.UIManager.closeWindow(storyUI.UIStoryWin,null);\r\n    }\r\n\r\n\r\n    public onClose(arg:any):void{\r\n        super.onClose(arg);\r\n\r\n        S.StoryMessageManager.removeListener(\r\n            StoryMessageManager.ONCONTENTREADY,\r\n            this.OnContentReady\r\n        );\r\n        S.StoryMessageManager.removeListener(\r\n            StoryMessageManager.ONCHOICESPRESENTED,\r\n            this.OnChoicesPresented\r\n        );\r\n        S.StoryMessageManager.removeListener(\r\n            StoryMessageManager.ONSTORYFINISHED,\r\n            this.OnStoryFinished\r\n        );\r\n    }\r\n}"]}