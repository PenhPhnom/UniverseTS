{"version":3,"file":"UILoginPage.js","sourceRoot":"","sources":["../../../../../../src/game/module/login/ui/UILoginPage.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAE,MAAM,EAAE,MAAM,iCAAiC,CAAC;AACzD,OAAO,EAAE,MAAM,EAAE,MAAM,4CAA4C,CAAC;AACpE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,MAAM,QAAQ,CAAC;AAE/C,OAAO,EAAE,OAAO,EAAE,MAAM,2BAA2B,CAAC;AACpD,OAAO,EAAE,QAAQ,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AACxD,OAAO,EAAE,SAAS,EAAE,MAAM,0BAA0B,CAAC;AACrD,OAAO,EAAE,QAAQ,EAAE,MAAM,sCAAsC,CAAC;AAChE,OAAO,EAAE,OAAO,EAAE,MAAM,2BAA2B,CAAC;AACpD,OAAO,EAAE,QAAQ,EAAE,MAAM,4BAA4B,CAAC;AACtD,OAAO,EAAE,CAAC,EAAE,MAAM,+BAA+B,CAAC;AAClD,OAAO,EAAE,MAAM,EAAE,MAAM,qCAAqC,CAAC;AAI7D,MAAM,OAAO,WAAY,SAAQ,MAAM;IAAvC;;QAwBY,cAAS,GAAO,IAAI,CAAC;IA0IjC,CAAC;IAxIU,KAAK,CAAC,OAAO;QAChB,KAAK,CAAC,OAAO,EAAE,CAAC;QAEhB,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,GAAE,EAAE;YAC5B,IAAI,CAAC,YAAY,EAAE,CAAC;QACxB,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,GAAE,EAAE;YAC5B,CAAC,CAAC,SAAS,CAAC,UAAU,CAClB,OAAO,CAAC,WAAW,EACnB,OAAO,CAAC,UAAU,EAClB,IAAI,CAAC,CAAC;QACd,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,GAAG,CAAC,GAAE,EAAE;YAC/B,CAAC,CAAC,SAAS,CAAC,UAAU,CAClB,QAAQ,CAAC,WAAW,EACpB,QAAQ,CAAC,YAAY,EACrB,IAAI,CACP,CAAC;QACN,CAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,GAAE,EAAE;YAChC,IAAI,CAAC,gBAAgB,EAAE,CAAC;QAC5B,CAAC,CAAC,CAAC;QAEH,+DAA+D;QAE/D,uCAAuC;QACvC,gDAAgD;IACpD,CAAC;IAGO,cAAc,CAAC,UAAuB;QAE1C,MAAM,CAAC,GAAG,CAAC,oBAAoB,GAAC,UAAU,CAAC,UAAU,CAAC,CAAA;QACtD,IAAI,CAAC,cAAc,CAAC,IAAI,GAAG,UAAU,CAAC,UAAU,CAAC;IACrD,CAAC;IAGM,KAAK,CAAC,MAAM,CAAC,EAAM;QACtB,KAAK,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;QAEjB,MAAM;QACN,IAAI,CAAC,SAAS,GAAG,MAAM,CAAC,CAAC,UAAU,CAAC,UAAU,CAAC,oDAAoD,CAAC,CAAA;QACpG,IAAI,IAAI,GAAG,WAAW,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAA2B,CAAC;QACxF,IAAI,OAAO,GAAG,IAAI,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,CAAC,QAAQ,CAAC,eAAe,CAAC,OAAO,CAAC,CAAC;QAGtC,QAAQ;QACR,CAAC,CAAC,eAAe,CAAC,WAAW,CAC1B,SAAS,CAAC,iBAAiB,EAC3B,IAAI,EACJ,IAAI,CAAC,cAAc,CACtB,CAAC;IACN,CAAC;IACM,OAAO,CAAC,GAAO;QAClB,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;QAEnB,MAAM;QACN,CAAC,CAAC,UAAU,CAAC,gBAAgB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAE9C,CAAC,CAAC,eAAe,CAAC,cAAc,CAC5B,SAAS,CAAC,iBAAiB,EAC3B,IAAI,CAAC,cAAc,CACtB,CAAC;IACN,CAAC;IAEO,gBAAgB;QAEpB,OAAO;QACP,IAAI,QAAQ,GAAY,IAAI,QAAQ,EAAE,CAAC;QACvC,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,EAAE,EAAE,CAAC,EAAE,EAAC,CAAC;YACpB,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,EAAC,IAAI,GAAC,CAAC,CAAC,CAAC;YAC/B,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE,IAAI,KAAK,EAAgB,CAAC,CAAC;YAErD,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,GAAG,EAAE,CAAC,EAAE,EAAC,CAAC;gBAErB,IAAI,YAAY,GAAgB,IAAI,YAAY,EAAE,CAAC;gBACnD,YAAY,CAAC,MAAM,GAAG,CAAC,CAAC;gBACxB,YAAY,CAAC,QAAQ,GAAG,CAAC,CAAC;gBAE1B,YAAY,CAAC,UAAU,GAAG,OAAO,GAAC,CAAC,GAAC,GAAG,GAAC,CAAC,CAAC;gBAC1C,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAC,CAAC,GAAC,CAAC,CAAC,CAAC;gBAG1D,QAAQ,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;YACjD,CAAC;QACL,CAAC;QAED,CAAC,CAAC,SAAS,CAAC,UAAU,CAClB,OAAO,CAAC,WAAW,EACnB,OAAO,CAAC,cAAc,EACtB,QAAQ,CAAC,CAAC;IAClB,CAAC;IAEO,KAAK,CAAC,YAAY;QAEtB,IAAI,OAAO,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC;QAClC,IAAI,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;QAEpC,MAAM,CAAC,GAAG,CAAC,WAAW,OAAO,gBAAgB,QAAQ,EAAE,CAAC,CAAC;QAEzD,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;QAG7C,uCAAuC;QAEvC,mEAAmE;QACnE,gCAAgC;QAChC,8BAA8B;QAC9B,+EAA+E;QAE/E,gDAAgD;QAEhD,cAAc;QACd,6EAA6E;QAC7E,qBAAqB;QACrB,0CAA0C;QAE1C,+EAA+E;QAE/E,uCAAuC;QACvC,yDAAyD;QAEzD,wDAAwD;QAExD,aAAa;QACb,sCAAsC;QACtC,QAAQ;QAGR,KAAK;IAET,CAAC;CACJ;AA/JU;IADN,MAAM,CAAC,SAAS,CAAC;8CACmB;AAE9B;IADN,MAAM,CAAC,UAAU,CAAC;+CACmB;AAG/B;IADN,MAAM,CAAC,cAAc,CAAC;mDACgB;AAGhC;IADN,MAAM,CAAC,UAAU,CAAC;+CACgB;AAG5B;IADN,MAAM,CAAC,UAAU,CAAC;+CACgB;AAG5B;IADN,MAAM,CAAC,aAAa,CAAC;kDACgB;AAG/B;IADN,MAAM,CAAC,MAAM,CAAC;6CACiB","sourcesContent":["import { UIPage } from \"../../../../framework/ui/UIPage\";\r\nimport { binder } from \"../../../../framework/common/NiceDecorator\";\r\nimport { FairyGUI, UnityEngine } from \"csharp\";\r\nimport { LoginAPI } from \"../../../api/LoginAPI\";\r\nimport { loginUI } from \"../../../../data/ui/login\";\r\nimport { VoServer, VoServerItem } from \"../vo/VoServer\";\r\nimport { UIMessage } from \"../../../event/UIMessage\";\r\nimport { SceneDef } from \"../../../../framework/scene/SceneDef\";\r\nimport { storyUI } from \"../../../../data/ui/story\";\r\nimport { commonUI } from \"../../../../data/ui/common\";\r\nimport { S } from \"../../../../global/GameConfig\";\r\nimport { Logger } from \"../../../../framework/logger/Logger\";\r\n\r\n\r\n\r\nexport class UILoginPage extends UIPage{\r\n\r\n    @binder(\"account\")\r\n    public m_account:FairyGUI.GTextField;\r\n    @binder(\"password\")\r\n    public m_password:FairyGUI.GTextField;\r\n\r\n    @binder(\"selserverBtn\")\r\n    public m_selserverBtn:FairyGUI.GButton;\r\n\r\n    @binder(\"loginBtn\")\r\n    public m_loginBtn:FairyGUI.GButton;\r\n\r\n    @binder(\"storyBtn\")\r\n    public m_storyBtn:FairyGUI.GButton;\r\n\r\n    @binder(\"newGuideBtn\")\r\n    public m_newGuideBtn:FairyGUI.GButton;\r\n\r\n    @binder(\"hold\")\r\n    public m_holder:FairyGUI.GGraph;\r\n\r\n    private gateId:any;\r\n    private gateKey:number|Long;\r\n    private _effectGo:any = null;\r\n\r\n    public async onAwake(){\r\n        super.onAwake();\r\n        \r\n        this.m_loginBtn.onClick.Add(()=>{\r\n            this.onLoginClick();\r\n        });\r\n\r\n        this.m_storyBtn.onClick.Add(()=>{\r\n            S.UIManager.openWindow(\r\n                storyUI.PackageName, \r\n                storyUI.UIStoryWin,\r\n                null);\r\n        });\r\n\r\n        this.m_newGuideBtn.onClick.Add(()=>{\r\n            S.UIManager.openWindow(\r\n                commonUI.PackageName,\r\n                commonUI.UIUIGuideWin,\r\n                null\r\n            );\r\n        });\r\n\r\n        this.m_selserverBtn.onClick.Add(()=>{\r\n            this.openSelServerWin();\r\n        });\r\n\r\n        // let connected = await S.SessionManager.connectRealmServer();\r\n        \r\n        // this.m_loginBtn.enabled = connected;\r\n        // Logger.log(\"connect ream server: \"+connected)\r\n    }\r\n    \r\n\r\n    private onSelectServer(serverItem:VoServerItem){\r\n\r\n        Logger.log(\" server selected: \"+serverItem.serverName)\r\n        this.m_selserverBtn.text = serverItem.serverName;\r\n    }\r\n\r\n\r\n    public async onShow(vo:any){\r\n        super.onShow(vo);\r\n\r\n        //加载特效\r\n        this._effectGo = await S.ResManager.loadPrefab(\"Effect/Prefab/UI/ef_ui_pet_rank_yellow_test.prefab\")\r\n        let inst = UnityEngine.GameObject.Instantiate(this._effectGo) as UnityEngine.GameObject;\r\n        let wrapper = new FairyGUI.GoWrapper(inst);\r\n        this.m_holder.SetNativeObject(wrapper);\r\n\r\n\r\n         //监听选服消息\r\n         S.UIMessageManger.addListener(\r\n            UIMessage.MSG_SELECT_SERVER,\r\n            this,\r\n            this.onSelectServer\r\n        );\r\n    }\r\n    public onClose(arg:any):void{\r\n        super.onClose(arg);\r\n\r\n        //卸载铁效\r\n        S.ResManager.releaseAddressGO(this._effectGo);\r\n\r\n        S.UIMessageManger.removeListener(\r\n            UIMessage.MSG_SELECT_SERVER,\r\n            this.onSelectServer\r\n        );\r\n    }\r\n\r\n    private openSelServerWin(){\r\n\r\n        // 测试数据\r\n        let voServer:VoServer = new VoServer();\r\n        for(let i=1; i<10; i++){\r\n            voServer.areaMap.set(i,\"分区\"+i);\r\n            voServer.serverMap.set(i, new Array<VoServerItem>());\r\n\r\n            for(let j=1; j<200; j++){\r\n\r\n                let voServerItem:VoServerItem = new VoServerItem();\r\n                voServerItem.areaId = i;\r\n                voServerItem.serverId = j;\r\n\r\n                voServerItem.serverName = \"测试服务器\"+i+\":\"+j;\r\n                voServerItem.serverStatus = Math.floor(Math.random()*3+1);\r\n\r\n                \r\n                voServer.serverMap.get(i).push(voServerItem);\r\n            }\r\n        }\r\n\r\n        S.UIManager.openWindow(\r\n            loginUI.PackageName, \r\n            loginUI.UISelServerWin,\r\n            voServer);\r\n    }\r\n\r\n    private async onLoginClick(){\r\n\r\n        let account = this.m_account.text;\r\n        let password = this.m_password.text;\r\n\r\n        Logger.log(`account:${account} - password: ${password}`);\r\n\r\n        S.SceneManager.loadScene(SceneDef.HomeScene);\r\n\r\n\r\n        // if(account != \"\" && password != \"\"){\r\n            \r\n        //     let msg = await LoginAPI.loginRealmServer(account, password)\r\n        //     this.gateId = msg.GateId;\r\n        //     this.gateKey = msg.Key;\r\n        //     Logger.log(\"login ream succ, gate addr:\"+msg.Address + \",key:\"+msg.Key);\r\n\r\n        //     S.SessionManager.disconnectRealmServer();\r\n            \r\n        //     //登录网关服\r\n        //     let connected = await S.SessionManager.connectGateServer(msg.Address);\r\n        //     if(connected){\r\n        //         Logger.log(\"connect gate succ\")\r\n\r\n        //         let msg = await LoginAPI.loginGateServer( this.gateId, this.gateKey)\r\n\r\n        //         let playerID = msg.PlayerId;\r\n        //         Logger.log(\"login gate response..\" +playerID);\r\n\r\n        //         S.SceneManager.loadScene(SceneDef.HomeScene);\r\n\r\n        //     }else{\r\n        //     Logger.log(\"connect gate err \")\r\n        //     }\r\n\r\n\r\n        //  }\r\n\r\n    }\r\n}"]}