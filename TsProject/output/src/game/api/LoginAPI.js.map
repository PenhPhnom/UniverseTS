{"version":3,"file":"LoginAPI.js","sourceRoot":"","sources":["../../../../src/game/api/LoginAPI.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,OAAO,EAAE,MAAM,sBAAsB,CAAC;AAC/C,OAAO,EAAE,MAAM,EAAE,MAAM,sBAAsB,CAAC;AAC9C,OAAO,EAAE,MAAM,EAAE,MAAM,+BAA+B,CAAC;AACvD,OAAO,EAAE,CAAC,EAAE,MAAM,yBAAyB,CAAC;AAG5C,MAAM,OAAO,QAAQ;IAEV,MAAM,CAAC,KAAK,CAAC,aAAa;QAG7B,KAAI,IAAI,CAAC,GAAC,CAAC,EAAE,CAAC,GAAC,CAAC,EAAC,CAAC,EAAE,EAAC,CAAC;YAClB,IAAI,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;YACrC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC;YACf,GAAG,CAAC,QAAQ,GAAG,gBAAgB,CAAC;YAEhC,IAAI,QAAQ,GAAG,MAAM,CAAC,CAAC,cAAc,CAAC,WAAW,CAC7C,MAAM,CAAC,aAAa,EACpB,GAAG,CACN,CAAA;YACD,IAAI,IAAI,GAAK,QAA6B,CAAC;YAC3C,MAAM,CAAC,GAAG,CAAC,QAAQ,GAAC,IAAI,CAAC,KAAK,GAAE,OAAO,GAAC,IAAI,CAAC,OAAO,GAAE,OAAO,GAAC,IAAI,CAAC,YAAY,CAAC,CAAC;QACrF,CAAC;IAEL,CAAC;IAGM,MAAM,CAAC,KAAK,CAAC,gBAAgB,CAAC,OAAc,EAAE,QAAe;QAE/D,IAAI,GAAG,GAAG,OAAO,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC;QACrC,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC;QACtB,GAAG,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAExB,IAAI,QAAQ,GAAG,MAAM,CAAC,CAAC,cAAc,CAAC,YAAY,CAC/C,MAAM,CAAC,aAAa,EACpB,GAAG,CACN,CAAA;QAED,OAAO,QAA6B,CAAC;IACzC,CAAC;IAGM,MAAM,CAAC,KAAK,CAAC,eAAe,CAAC,MAAM,EAAE,OAAO;QAE/C,IAAI,GAAG,GAAG,OAAO,CAAC,aAAa,CAAC,MAAM,EAAE,CAAC;QACzC,GAAG,CAAC,MAAM,GAAG,MAAM,CAAC;QACpB,GAAG,CAAC,GAAG,GAAG,OAAO,CAAC;QAElB,IAAI,QAAQ,GAAG,MAAM,CAAC,CAAC,cAAc,CAAC,WAAW,CAC7C,MAAM,CAAC,iBAAiB,EACxB,GAAG,CACN,CAAC;QAEF,OAAO,QAAiC,CAAC;IAC7C,CAAC;CACJ","sourcesContent":["import { nice_ts } from \"../../data/pb/gen/pb\";\r\nimport { Opcode } from \"../../data/pb/Opcode\";\r\nimport { Logger } from \"../../framework/logger/Logger\";\r\nimport { S } from \"../../global/GameConfig\";\r\n\r\n\r\nexport class LoginAPI{\r\n\r\n    public static async benchmarkTest(){\r\n\r\n        \r\n        for(let i=1; i<2;i++){\r\n            let msg = nice_ts.C2GS_Test.create();\r\n            msg.testID = i;\r\n            msg.testName = \"benchmark test\";\r\n\r\n            let response = await S.SessionManager.sendGateMsg(\r\n                Opcode.MSG_C2GS_Test,\r\n                msg\r\n            )\r\n            let test  =  response as nice_ts.GS2C_Test;\r\n            Logger.log(\"code: \"+test.Error +\",msg:\"+test.Message +\",res:\"+test.testResponse);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n    public static async loginRealmServer(account:string, password:string):Promise<nice_ts.R2C_Login>{\r\n\r\n         let msg = nice_ts.C2R_Login.create();\r\n         msg.Account = account;\r\n         msg.Password = password;\r\n\r\n         let response = await S.SessionManager.sendRealmMsg(\r\n            Opcode.MSG_C2R_Login,\r\n            msg\r\n        )\r\n\r\n        return response as nice_ts.R2C_Login;\r\n    }\r\n    \r\n\r\n    public static async loginGateServer(gateId, gateKey):Promise<nice_ts.G2C_LoginGate>{\r\n\r\n        let msg = nice_ts.C2G_LoginGate.create();\r\n        msg.GateId = gateId;\r\n        msg.Key = gateKey;\r\n        \r\n        let response = await S.SessionManager.sendGateMsg(\r\n            Opcode.MSG_C2G_LoginGate,\r\n            msg\r\n        );\r\n\r\n        return response as nice_ts.G2C_LoginGate;\r\n    }\r\n}"]}