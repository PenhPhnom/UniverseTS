{"version":3,"file":"UnitTest.js","sourceRoot":"","sources":["../../../src/unittest/UnitTest.ts"],"names":[],"mappings":"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","sourcesContent":["import {TimeUtil} from '../framework/util/TimeUtil';\r\nimport {SingletonTest} from './SingletonTest';\r\nimport {Messenger} from '../framework/common/Messenger';\r\nimport { ResManager } from '../framework/common/ResManager';\r\nimport { SkillConfigTB, SkillConfigTR } from '../data/excel/SkillConfig';\r\nimport { RedHintsMessageManager } from '../framework/redhints/RedHintsMessageManager';\r\nimport { enumRedHints, RedHintsManager } from '../framework/redhints/RedHintsManager';\r\nimport { Story } from 'inkjs';\r\nimport { nice_ts } from '../data/pb/gen/pb';\r\nimport { S } from '../global/GameConfig';\r\nimport { Logger } from '../framework/logger/Logger';\r\nimport { PlayerManager } from '../game/entity/PlayerManager';\r\nimport { BagComponent } from '../game/entity/component/BagComponent';\r\nimport { PlayerInfoComponent } from '../game/entity/component/PlayerInfoComponent';\r\nimport { TestC, TestP } from 'csharp';\r\n\r\n\r\nexport class UnitTest{\r\n    public static testVar:number = 10000;\r\n\r\n\r\n    public static async doTest(){\r\n\r\n        Logger.log(\"TimeUtil =============================\");\r\n        TimeUtil.test();\r\n\r\n        Logger.log(\"Singleton =============================\");\r\n        SingletonTest.Instance(SingletonTest);\r\n        Logger.log(\"===\");\r\n        let t1: SingletonTest = SingletonTest.Instance(SingletonTest);\r\n        let t2: SingletonTest = SingletonTest.Instance(SingletonTest);\r\n\r\n        Logger.log(t1.test() + \" : \" + t2.test());\r\n        t1.add();\r\n        Logger.log(t1.test() + \" : \" + t2.test());\r\n        t2.add();\r\n        Logger.log(t1.test() + \" : \" + t2.test());\r\n\r\n\r\n        Logger.log(\"Messager =============================\");\r\n\r\n        let messenger:Messenger = new Messenger();\r\n        let listen:Function = function(a:number, b:string){\r\n            Logger.log(`listen call: ${a} , ${b}`)\r\n        }\r\n        let listen2:Function = function(a:number, b:string){\r\n            Logger.log(`listen call2: ${a} , ${b}`)\r\n        }\r\n\r\n        let  EVENT_CODE:number = 100;\r\n        messenger.addListener(EVENT_CODE,this, listen);\r\n        messenger.addListener(EVENT_CODE,this, listen2);\r\n        messenger.broadcast(EVENT_CODE, 999,\" Hello\");\r\n\r\n        messenger.removeListener(EVENT_CODE,listen);\r\n        messenger.broadcast(EVENT_CODE, 999,\" Hello\");\r\n\r\n        messenger.clearup();\r\n        messenger.broadcast(EVENT_CODE, 999,\" Hello\");\r\n\r\n\r\n        Logger.log(\"Timer =============================\");\r\n\r\n        let interval = setInterval(()=>{\r\n            Logger.log(\"inter val..\")\r\n        },1000);\r\n        let timeout = setTimeout(()=>{\r\n            clearInterval(interval);\r\n        },5000); \r\n\r\n\r\n\r\n\r\n\r\n        Logger.log(\"ResourceManager =============================\");\r\n\r\n       // let prefab = await ResManager.Instance(ResManager).loadPrefab(\"Models/1001/Character.prefab\") ;\r\n        \r\n        //Logger.log(prefab);\r\n\r\n        //let inst = CS.UnityEngine.GameObject.Instantiate(prefab);\r\n        //inst.name = \"Test Ch\";\r\n\r\n\r\n        Logger.log(\"引用类型 =============================\");\r\n        let testMap:Map<string,Array<number>> = new Map();\r\n        testMap.set(\"key1\" ,new Array());\r\n\r\n        let arr1:Array<number> = testMap.get(\"key1\");\r\n        arr1.push(12);\r\n        arr1.push(333);\r\n\r\n        let arr2:Array<number> = testMap.get(\"key1\");\r\n        Logger.log(arr2);\r\n\r\n\r\n        // Logger.log(\"FariyGUI =============================\");\r\n        //  let page:UI_LoginPage = new UI_LoginPage();\r\n        //  CS.FairyGUI.GRoot.inst.AddChild(page._ui);\r\n        //  Logger.log(page._ui);\r\n\r\n        // Logger.log(\"ModuleManager =============================\");\r\n\r\n        // ModuleManager.Instance(ModuleManager).createModule(ModuleDef.LoginModule,\"create login\");\r\n\r\n        // ModuleManager.Instance(ModuleManager).sendMessage(ModuleDef.LoginModule, \"test1\",2233);\r\n        // ModuleManager.Instance(ModuleManager).sendMessage(ModuleDef.HomeModule, \"test2\",2233);\r\n        // Logger.log(\"then create Home\");\r\n        // ModuleManager.Instance(ModuleManager).createModule(ModuleDef.HomeModule,\"create login\");\r\n    \r\n        \r\n        Logger.log(\"UIManager =============================\");\r\n\r\n\r\n\r\n        Logger.log(\"excel data =============================\");\r\n        let skillMap = SkillConfigTB.Instance(SkillConfigTB).trs;\r\n        let skilltr:SkillConfigTR = skillMap.get(1003);\r\n        Logger.log(`${skilltr._Name} : ${skilltr._AttackType}`)\r\n        let impacttype = skilltr._ImpactType;\r\n        Logger.log(impacttype);\r\n\r\n\r\n\r\n        Logger.log(\"Protobuf =============================\");\r\n\r\n        try{\r\n            let c2rLogin = {\r\n                \"Account\" : \"test\",\r\n                \"Password\" : \"1234\"\r\n            };\r\n\r\n\r\n            //验证\r\n            let v1 = nice_ts.C2R_Login.verify(c2rLogin);\r\n            Logger.log(\"verify pb: \"+ v1);\r\n\r\n            let msg = nice_ts.C2R_Login.create(c2rLogin)\r\n            msg.Account = \"test1\"\r\n            msg.Password = \"1122\"\r\n            Logger.log(msg)\r\n\r\n            let buf = nice_ts.C2R_Login.encode(msg).finish()\r\n            Logger.log(buf)\r\n\r\n            let de_buf = nice_ts.C2R_Login.decode(buf)\r\n            Logger.log(de_buf.Account)\r\n            Logger.log(de_buf.Password)\r\n\r\n\r\n        }catch(ex){\r\n            Logger.log(ex);\r\n        }\r\n\r\n\r\n        Logger.log(\"UintArray =============================\");\r\n\r\n        let  opcode_arr = new Uint8Array([257,25]);\r\n        Logger.log(opcode_arr.subarray(0,1));\r\n        Logger.log(opcode_arr.length);\r\n\r\n        let opcode_arr2 = new Uint8Array([33]);\r\n\r\n        //合并 Uint8Array\r\n        let merge_arr = new Uint8Array(opcode_arr.length + opcode_arr2.length);\r\n        merge_arr.set(opcode_arr2);\r\n        merge_arr.set(opcode_arr, opcode_arr2.length);\r\n        Logger.log(merge_arr.length);\r\n     \r\n        let n:number = 5678;\r\n        let buffer:Uint8Array = new Uint8Array(4);\r\n\r\n        // << 左移  >> 右移  >>> 无符号右移\r\n        //n转uint8Array\r\n        buffer[0] = n >>> 24;\r\n        buffer[1] = n >>> 16;\r\n        buffer[2] = n >>> 8;\r\n        buffer[3] = n & 0xff;\r\n\r\n\r\n        //unit8Array转n\r\n        n = buffer[0] << 24 | buffer[1] << 16 | buffer[2] << 8 | buffer[3];\r\n        Logger.log(n);\r\n\r\n\r\n        n = 300;\r\n        let buffer1:Uint8Array = new Uint8Array(2);\r\n        buffer1[0] = n >>> 8;\r\n        buffer1[1] = n & 0xff;\r\n\r\n        Logger.log(buffer1);\r\n        n = buffer1[0]<<8 | buffer1[1];\r\n        Logger.log(n);\r\n\r\n        \r\n        Logger.log(\"sleep =============================\");\r\n        await TimeUtil.sleep(1000);\r\n        Logger.log(\"sleep ..end\");\r\n\r\n\r\n        // Logger.log(\"flatbuffer =============================\");\r\n        // try{\r\n        //     let bytes:ArrayBuffer = await ResManager.Instance(ResManager).loadTextBytes(\"Config/fb/unitconfig.bytes\")\r\n        //     let unitByte = new flatbuffers.ByteBuffer(new Uint8Array(bytes));\r\n        //     Logger.log(unitByte);\r\n        //     let unitconfig:fb.unitconfigTB = fb.unitconfigTB.getRootAsunitconfigTB(unitByte)\r\n        //     Logger.log(unitconfig.unitconfigTRSLength());\r\n            \r\n    \r\n        //     for(let i=0; i<unitconfig.unitconfigTRSLength(); i++){\r\n        //         let a =  unitconfig.unitconfigTRS(i);\r\n        //         Logger.log(a.Name());\r\n        //     }\r\n\r\n        // }catch(ex){\r\n        //     Logger.error(ex);\r\n        // }\r\n\r\n\r\n\r\n        try{\r\n            Logger.log(\"测试红点系统 =============================\");\r\n\r\n            RedHintsMessageManager.Instance(RedHintsMessageManager).addListener(\r\n                enumRedHints.chat,\r\n                this,\r\n                function(){\r\n                    Logger.log(\"red hints chat...\");\r\n                }\r\n            );\r\n            RedHintsMessageManager.Instance(RedHintsMessageManager).addListener(\r\n                enumRedHints.chat_family,\r\n                this,\r\n                function(){\r\n                    Logger.log(\"red hints chat_family...\");\r\n                }\r\n            );\r\n            RedHintsMessageManager.Instance(RedHintsMessageManager).addListener(\r\n                enumRedHints.chat_system,\r\n                this,\r\n                function(){\r\n                    Logger.log(\"red hints chat...\");\r\n                }\r\n            );\r\n\r\n            RedHintsManager.Instance(RedHintsManager).setRedHintOpenOrClose(\r\n                enumRedHints.chat_family, true\r\n            );\r\n            let r_chat = RedHintsManager.Instance(RedHintsManager).checkRedIsOpen(\r\n                enumRedHints.chat\r\n            ) ;\r\n            let r_chat_family = RedHintsManager.Instance(RedHintsManager).checkRedIsOpen(\r\n                enumRedHints.chat_family\r\n            ) ;\r\n            let r_chat_system = RedHintsManager.Instance(RedHintsManager).checkRedIsOpen(\r\n                enumRedHints.chat_system\r\n            ) ;\r\n            Logger.log(r_chat, r_chat_family, r_chat_system)\r\n\r\n        }catch(error){\r\n            Logger.log(error)\r\n        }\r\n\r\n\r\n        \r\n        try{\r\n            Logger.log(\"Ink Story =============================\");\r\n\r\n\r\n            var json = await (await ResManager.Instance(ResManager).loadTextAsset(\"Story/TestStory.json\")).text;\r\n            let story = new Story(json);\r\n            story.ChoosePathString(\"story1\", true);\r\n            story.BindExternalFunction(\"GetCharacterName\",()=>{\r\n                return \"Justin Test\";\r\n            })\r\n            story.BindExternalFunctionGeneral(\"GetCharacterNameByMutiParams\",(args:[])=>{\r\n                Logger.log(args.length);\r\n                return \"TTTT\";\r\n            })\r\n\r\n            Logger.log(story.Continue());\r\n            Logger.log(story.Continue());\r\n            Logger.log(story.Continue());\r\n        }catch(error){\r\n            Logger.log(error)\r\n        }\r\n\r\n\r\n        Logger.log(\"HttpManager=========================\")\r\n\r\n        let txt = await S.HttpManager.get(\"https://www.baidu.com/\");\r\n        Logger.log(txt);\r\n\r\n        \r\n         //Logger.log(\"entity=========================\")\r\n\r\n         let player = PlayerManager.Instance(PlayerManager).getPlayer();\r\n         let bagC =  player.addComponent<BagComponent>(BagComponent);\r\n         //Logger.log(bagC.name);\r\n \r\n         let infoC = player.addComponent<PlayerInfoComponent>(PlayerInfoComponent);\r\n         //Logger.log(infoC.nickName);\r\n \r\n         //测试事件\r\n         let event = new Event();\r\n         event.name = \"helloEvent\"\r\n \r\n         //Lambda 表达式订阅\r\n         bagC.subscribe<Event>(\r\n             (e)=>{\r\n                 //Logger.log(\"Event trigger:\"+e.name)\r\n             }, Event)\r\n         \r\n         let trigger2 = (e:Event)=>{\r\n             //Logger.log(\"Event trigger2:\"+e.name)\r\n         }\r\n \r\n         //订阅\r\n         bagC.subscribe<Event>(trigger2, Event)\r\n         //取消订阅\r\n         bagC.unSubscribe<Event>(trigger2, Event);\r\n \r\n         bagC.publish<Event>(event, Event);\r\n\r\n\r\n        //test delegate\r\n        TestC.SetPackageItemExtension(new TTestC())\r\n\r\n        setInterval(()=>{\r\n\r\n            let p = TestC.getObj();\r\n\r\n            if(p instanceof TTestC){\r\n                console.log(\"aaaaaaaaaaaaaaaa\")\r\n            }else{\r\n                console.log(\"bbbbbbbbbbbbbbbbbbbb\")\r\n            }\r\n\r\n        },1000)\r\n \r\n    }\r\n\r\n\r\n}\r\n\r\nclass TTestC extends TestP{\r\n\r\n    public test(){\r\n        console.log(\"hello test delegate\")\r\n    }\r\n}\r\n\r\n\r\n\r\nexport class Event{\r\n    id:number;\r\n    name:string;\r\n}\r\n\r\n\r\n"]}