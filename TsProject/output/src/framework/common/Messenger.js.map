{"version":3,"file":"Messenger.js","sourceRoot":"","sources":["../../../../src/framework/common/Messenger.ts"],"names":[],"mappings":"AAEA,MAAM,OAAO,MAAM;CAGlB;AAGD,MAAM,OAAO,SAAS;IAIlB;QAFQ,gBAAW,GAAG,IAAI,GAAG,EAAiB,CAAC;IAI/C,CAAC;IAEM,WAAW,CAAC,MAAa,EAAE,KAAS,EAAE,SAAkB;QAE3D,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAE1C,IAAG,OAAM,CAAC,MAAM,CAAC,IAAI,WAAW,EAAC,CAAC;YAC9B,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;YACtB,MAAM,CAAC,GAAG,GAAG,KAAK,CAAC;YACnB,MAAM,CAAC,SAAS,GAAG,IAAI,KAAK,EAAY,CAAC;QAC7C,CAAC;QACD,MAAM,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAEjC,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;IACzC,CAAC;IAEM,WAAW,CAAC,MAAa;QAC5B,OAAO,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;IACxC,CAAC;IAEM,SAAS,CAAC,MAAa,EAAE,GAAG,MAAY;QAE3C,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAE1C,IAAG,OAAM,CAAC,MAAM,CAAC,IAAI,WAAW,EAAC,CAAC;YAC9B,KAAI,IAAI,CAAC,IAAI,MAAM,CAAC,SAAS,EAAC,CAAC;gBAC5B,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,GAAG,EAAE,MAAM,CAAC,CAAC;YAE/B,CAAC;QACL,CAAC;IAEL,CAAC;IAGM,oBAAoB,CAAC,MAAa;QAErC,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;IACpC,CAAC;IAGM,cAAc,CAAC,MAAa,EAAE,UAAmB;QAEpD,IAAI,MAAM,GAAG,IAAI,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;QAE1C,IAAG,OAAM,CAAC,MAAM,CAAC,IAAI,WAAW,EAAC,CAAC;YAE9B,KAAI,IAAI,CAAC,GAAS,CAAC,EAAE,CAAC,GAAE,MAAM,CAAC,SAAS,CAAC,MAAM,EAAE,CAAC,EAAE,EAAC,CAAC;gBAClD,IAAG,MAAM,CAAC,SAAS,CAAC,CAAC,CAAC,IAAI,UAAU,EAAC,CAAC;oBAClC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;gBACjC,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC;IAEM,OAAO;QAEV,IAAI,CAAC,WAAW,CAAC,KAAK,EAAE,CAAC;IAC7B,CAAC;CAEJ","sourcesContent":["\r\n\r\nexport class MesObj{\r\n    public listeners:Array<Function>;\r\n    public obj:any;\r\n}\r\n\r\n\r\nexport class Messenger{\r\n\r\n    private listenerMap = new Map<number,MesObj>();\r\n\r\n    constructor(){\r\n\r\n    }\r\n\r\n    public addListener(e_type:number, e_obj:any, e_listner:Function):void{\r\n\r\n        let msgObj = this.listenerMap.get(e_type);\r\n\r\n        if(typeof(msgObj) == \"undefined\"){\r\n            msgObj = new MesObj();\r\n            msgObj.obj = e_obj;\r\n            msgObj.listeners = new Array<Function>();\r\n        }\r\n        msgObj.listeners.push(e_listner);\r\n\r\n        this.listenerMap.set(e_type, msgObj);\r\n    }\r\n\r\n    public getListener(e_type:number):MesObj{\r\n        return this.listenerMap.get(e_type);\r\n    }\r\n\r\n    public broadcast(e_type:number, ...params:any[]) : void {\r\n\r\n        let msgObj = this.listenerMap.get(e_type);\r\n        \r\n        if(typeof(msgObj) != \"undefined\"){\r\n            for(let l of msgObj.listeners){\r\n               l.apply(msgObj.obj, params);\r\n\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n    public removeListenerByType(e_type:number) :void {\r\n\r\n        this.listenerMap.delete(e_type);\r\n    }\r\n\r\n\r\n    public removeListener(e_type:number, e_listener:Function ):void{\r\n\r\n        let msgObj = this.listenerMap.get(e_type);\r\n\r\n        if(typeof(msgObj) != \"undefined\"){\r\n            \r\n            for(let i:number =0; i< msgObj.listeners.length; i++){\r\n                if(msgObj.listeners[i] == e_listener){\r\n                    msgObj.listeners.splice(i,1);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public clearup():void{\r\n\r\n        this.listenerMap.clear();\r\n    }\r\n\r\n}"]}