{"version":3,"file":"List.js","sourceRoot":"","sources":["../../../../src/framework/common/List.ts"],"names":[],"mappings":"AACA,MAAM,OAAQ,IAAQ,SAAQ,KAAQ;IACrC;QACC,KAAK,EAAE,CAAC;QAGT,QAAG,GAAY,UAAS,KAAO;YAC9B,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;QAClB,CAAC,CAAA;QAED,WAAM,GAAY,UAAS,KAAY,EAAE,KAAO;YAC/C,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,KAAK,CAAC,CAAC;QAC9B,CAAC,CAAA;QAED,WAAM,GAAY,UAAS,KAAO;YACjC,IAAI,KAAK,GAAU,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;YACvC,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;QACtB,CAAC,CAAA;QAED,aAAQ,GAAY,UAAS,KAAY;YACxC,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACvB,CAAC,CAAA;QAED,aAAQ,GAAY,UAAS,KAAO;YACnC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,IAAE,CAAC,CAAC;QAC/B,CAAC,CAAA;QAMD,UAAK,GAAY;YAChB,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAChB,CAAC,CAAA;QAED,YAAO,GAAY,UAAS,QAAiB;YACtC,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;YACvB,IAAI,GAAG,GAAG,IAAI,CAAC,MAAM,CAAC;YACtB,KAAI,IAAI,CAAC,GAAC,CAAC,EAAC,CAAC,GAAC,GAAG,EAAC,CAAC,EAAE,EAAC,CAAC;gBACnB,IAAG,IAAI,CAAC,SAAS,EAAC,CAAC;oBACf,MAAM;gBACV,CAAC;gBACD,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;YACtB,CAAC;QACL,CAAC,CAAA;QAED,cAAS,GAAW,KAAK,CAAC;QAC1B,UAAK,GAAY;YACb,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;QAC1B,CAAC,CAAA;QAEJ,YAAO,GAAY;YAClB,IAAI,KAAK,GAAO,EAAE,CAAC;YACnB,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACtB,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACrB,CAAC,CAAC,CAAC;YACH,OAAO,KAAK,CAAC;QACd,CAAC,CAAA;QAED,WAAM,GAAY,UAAS,KAAS;YACnC,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;gBACvB,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YACpB,CAAC,CAAC,CAAC;QACJ,CAAC,CAAA;IA3DD,CAAC;IAuBD,IAAW,KAAK;QACf,OAAO,IAAI,CAAC,MAAM,CAAC;IACpB,CAAC;CAmCD","sourcesContent":["\r\nexport  class List<T> extends Array<T> {\r\n\tpublic constructor() {\r\n\t\tsuper();\r\n\t}\r\n \r\n\tadd:Function = function(value:T):void{\r\n\t\tthis.push(value);\r\n\t}\r\n \r\n\tinsert:Function = function(index:number, value:T):void{\r\n\t\tthis.splice(index, 0, value);\r\n\t}\r\n \r\n\tremove:Function = function(value:T):void{\r\n\t\tvar index:number = this.indexOf(value);\r\n\t\tthis.removeAt(index);\r\n\t}\r\n \r\n\tremoveAt:Function = function(index:number):void{\r\n\t\tthis.splice(index, 1);\r\n\t}\r\n \r\n\tcontains:Function = function(value:T):boolean{\r\n\t\treturn this.indexOf(value)>=0;\r\n\t}\r\n \r\n\tpublic get count():number{\r\n\t\treturn this.length;\r\n\t}\r\n \r\n\tclear:Function = function():void{\r\n\t\tthis.splice(0);\r\n\t}\r\n \r\n\tforeach:Function = function(callback:Function):void {\r\n        this._breaking = false;\r\n        var sum = this.length;\r\n        for(var i=0;i<sum;i++){\r\n            if(this._breaking){\r\n                break;\r\n            }\r\n            callback(this[i]);\r\n        }\r\n    }\r\n \r\n    _breaking:boolean = false;\r\n    break:Function = function():void {\r\n        this._breaking = true;\r\n    }\r\n \r\n\ttoArray:Function = function():T[]{\r\n\t\tvar array:T[] = [];\r\n\t\tthis.forEach(element => {\r\n\t\t\tarray.push(element);\r\n\t\t});\r\n\t\treturn array;\r\n\t}\r\n \r\n\tappend:Function = function(value:T[]):void{\r\n\t\tvalue.forEach(element => {\r\n\t\t\tthis.push(element);\r\n\t\t});\r\n\t}\r\n}\r\n"]}