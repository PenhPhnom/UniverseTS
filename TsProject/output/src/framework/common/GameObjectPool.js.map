{"version":3,"file":"GameObjectPool.js","sourceRoot":"","sources":["../../../../src/framework/common/GameObjectPool.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport { Singleton } from './Singleton';\r\nimport { ResManager } from './ResManager';\r\nimport { UnityEngine } from 'csharp';\r\n\r\n\r\n\r\n// -- GameObject缓存池\r\n// -- 注意：\r\n// -- 1、所有需要预设都从这里加载，不要直接到ResourcesManager去加载，由这里统一做缓存管理\r\n// -- 2、缓存分为两部分：从资源层加载的原始GameObject(Asset)，从GameObject实例化出来的多个Inst\r\nexport class GameObjectPool extends Singleton<GameObjectPool>{\r\n\r\n    private __cacheTransRoot = null;\r\n    private __goPool = new Map();\r\n    private __instCache:Map<string,Array<any>> = new Map<string,Array<any>>();\r\n\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        let go = UnityEngine.GameObject.Find(\"GameObjectCacheRoot\");\r\n\r\n        if(go == undefined){\r\n            go = new UnityEngine.GameObject(\"GameObjectCacheRoot\");\r\n            UnityEngine.Object.DontDestroyOnLoad(go);\r\n        }\r\n\r\n        this.__cacheTransRoot = go.transform;\r\n    }\r\n\r\n    //-- 检测是否已经被缓存\r\n    public checkHasCached(path:string){\r\n\r\n        let cachedInst:Array<any> = this.__instCache.get(path);\r\n        if(cachedInst != undefined && cachedInst.length > 0){\r\n            return true;\r\n        }\r\n\r\n        let pooledGo = this.__goPool.get(path);\r\n        return pooledGo != undefined;\r\n    }\r\n\r\n\r\n    //-- 缓存并实例化GameObject\r\n    public cacheAndInstGameObject(path:string, go:any, inst_count:number = 1){\r\n\r\n        this.__goPool.set(path, go);\r\n        if(inst_count > 0){\r\n\r\n            let cachedInst:Array<any> = this.__instCache.get(path);\r\n            for(let i:number =0; i < inst_count; i++){\r\n\r\n                let inst = UnityEngine.GameObject.Instantiate(go) as UnityEngine.GameObject;\r\n                inst.transform.SetParent(this.__cacheTransRoot);\r\n                inst.SetActive(false);\r\n\r\n                cachedInst.push(inst);\r\n            }\r\n        }\r\n    }\r\n\r\n    //-- 尝试从缓存中获取\r\n    public tryGetFromCache(path:string):any{\r\n\r\n        if(!this.checkHasCached(path)) {\r\n            return null;\r\n        }\r\n\r\n        let cachedInst:Array<object>  = this.__instCache.get(path);\r\n        if(cachedInst != undefined && cachedInst.length>0){\r\n            \r\n            let inst = cachedInst.pop();\r\n            return inst;\r\n        }\r\n\r\n        let pooledGo = this.__goPool.get(path);\r\n        if(pooledGo != undefined){\r\n            let inst = UnityEngine.GameObject.Instantiate(pooledGo);\r\n            return inst;\r\n        }\r\n        return null;\r\n    }\r\n\r\n\r\n    //预加载：可提供初始实例化个数\r\n    public async preLoadGameObjectAsync(path:string, inst_count:number, callback:Function,...params){\r\n\r\n        if(this.checkHasCached(path)){\r\n            if(callback!=null){\r\n                callback(params);\r\n            }\r\n            return;\r\n        }\r\n\r\n        let go = await ResManager.Instance(ResManager).loadPrefab(path);\r\n        if(go!=undefined){\r\n            this.cacheAndInstGameObject(path, go,inst_count);\r\n        }\r\n\r\n        if(callback!=null){\r\n            callback(params);\r\n        }\r\n    }\r\n\r\n\r\n    //-- 异步获取：必要时加载\r\n    public async getGameObjectAsync(path:string, callback:Function,...params){\r\n\r\n        let inst:any = this.tryGetFromCache(path);\r\n        if(inst ==null){\r\n            await this.preLoadGameObjectAsync(path, 1, callback, params);\r\n        }\r\n\r\n        inst = this.tryGetFromCache(path);\r\n        inst.SetActive(true);\r\n\r\n        \r\n    }\r\n\r\n\r\n    //-- 回收\r\n    public recycleGameObject(path:string, inst:any){\r\n\r\n        inst.transform.SetParent(this.__cacheTransRoot);\r\n        inst.SetActive(false);\r\n\r\n        let cachedInst = this.__instCache.get(path) || new Array();\r\n        cachedInst.push(inst);\r\n\r\n        this.__instCache.set(path, cachedInst);\r\n\r\n    }\r\n\r\n\r\n    //-- 清理缓存\r\n    public cleanup(includePooledGo:boolean = false){\r\n\r\n        this.__instCache.forEach((values, key)=>{\r\n\r\n            for(let inst of values){\r\n                if(inst != null){\r\n                    UnityEngine.GameObject.Destroy(inst);\r\n                }\r\n            }\r\n        });\r\n        this.__instCache.clear(); \r\n\r\n        if(includePooledGo){\r\n            this.__goPool.forEach((go, key)=>{\r\n\r\n                if(go != null){\r\n                    ResManager.Instance(ResManager).releaseAddressGO(go);\r\n                }\r\n            });\r\n\r\n            this.__goPool.clear();\r\n        }\r\n\r\n    }\r\n\r\n\r\n}"]}