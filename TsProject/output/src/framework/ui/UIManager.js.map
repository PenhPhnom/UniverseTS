{"version":3,"file":"UIManager.js","sourceRoot":"","sources":["../../../../src/framework/ui/UIManager.ts"],"names":[],"mappings":"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","sourcesContent":["\r\nimport { Singleton } from '../common/Singleton';\r\nimport { UILoading } from './UILib/UILoading';\r\nimport { UIWindow } from './UIWindow';\r\nimport { UIWidge } from './UIWidge';\r\nimport { UIPanel } from './UIPanel';\r\nimport { UIFactory } from './UIFactory';\r\nimport { homeUI } from '../../data/ui/home';\r\nimport { S } from '../../global/GameConfig';\r\nimport { Logger } from '../logger/Logger';\r\n\r\n\r\nexport class UIPageTrack{\r\n    public pkg:string;\r\n    public name:string;\r\n    public arg:any;\r\n    public ui:UIPanel;\r\n}\r\n\r\n\r\nexport class UIManager extends Singleton<UIManager>{\r\n\r\n    private  m_pageTrackStack:Array<UIPageTrack>;\r\n    private m_currentPage:UIPageTrack;\r\n    private m_lastScensePage:UIPageTrack;\r\n\r\n    private m_listLoadedPanel:Array<UIPanel>;\r\n\r\n    private m_loadingPage:UIPanel;\r\n    private m_gmPage:UIPanel;\r\n\r\n\r\n    constructor(){\r\n        super();\r\n\r\n        this.m_pageTrackStack = new Array<UIPageTrack>();\r\n        this.m_listLoadedPanel = new Array<UIPanel>();\r\n\r\n    }\r\n\r\n    private distroyPanel(panel:UIPanel){\r\n        if(panel.isOpen){\r\n            panel.close();\r\n        }\r\n        //卸载资源\r\n        S.ResManager.releaseFairyGUIPackage(panel.pkgName);\r\n        panel.dispose();  \r\n    }\r\n\r\n    private distroyAllLoadedPanel():void{\r\n        for(let i= this.m_listLoadedPanel.length-1; i>=0; i--){\r\n            let panel = this.m_listLoadedPanel[i];\r\n\r\n            this.distroyPanel(panel);\r\n            this.m_listLoadedPanel.splice(i, 1);\r\n        }\r\n    }\r\n\r\n    public clean():void{\r\n\r\n        this.distroyAllLoadedPanel();\r\n\r\n        this.m_pageTrackStack.length = 0;\r\n        this.m_listLoadedPanel.length = 0;\r\n    }\r\n\r\n    public getPanelUI(name:string):UIPanel{\r\n\r\n        for (const panel of this.m_listLoadedPanel) {\r\n            if(panel.name == name){\r\n\r\n                Logger.log(\"find panel in cache: \"+name);\r\n\r\n                return panel;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public async open(pkg:string, name:string, arg?:any){\r\n   \r\n        let ui:any = this.getPanelUI(name);\r\n\r\n        if(ui == null){\r\n            //加载 package\r\n            await S.ResManager.loadFairyGUIPackage(pkg);\r\n            ui = UIFactory.createUI(pkg, name);\r\n            this.m_listLoadedPanel.push(ui);\r\n        }\r\n\r\n        if(ui != null){\r\n            // ###  ui as any 调用私有方法\r\n            (ui as any)._internalOpen(arg);\r\n        }\r\n\r\n        return ui;\r\n    }\r\n\r\n\r\n    private async openPageWorker(pkg:string, page:string, arg:any){\r\n\r\n        //设置 m_currentPage\r\n        this.m_currentPage = new UIPageTrack();\r\n       \r\n        this.m_currentPage.pkg = pkg;\r\n        this.m_currentPage.name = page;\r\n        this.m_currentPage.arg = arg;\r\n\r\n        //打开新Page\r\n        await S.ResManager.loadFairyGUIPackage(pkg);\r\n        let ui = UIFactory.createUI(pkg, page);\r\n        (ui as any)._internalOpen(arg);\r\n\r\n        //保存到 m_currentPage\r\n        this.m_currentPage.ui = ui;\r\n\r\n        //销毁当前page 中打开的各自Panels\r\n        this.distroyAllLoadedPanel();\r\n\r\n        return this.m_currentPage;\r\n    }\r\n    \r\n     //==========================================================UIPage\r\n    //打开场景页面,此页面不计入页面栈,无返回上一面按钮\r\n    public async openPageInScene(pkg:string, page:string, arg:any){\r\n        \r\n        let _openPage = await this.openPageWorker(pkg, page, arg);\r\n\r\n        if(this.m_lastScensePage){\r\n            this.distroyPanel(this.m_lastScensePage.ui);\r\n        }\r\n        this.m_lastScensePage = _openPage;\r\n    }\r\n\r\n    //打开页面, 会关闭上一个页面上的所有窗口,Widiget等\r\n    public async openPage(pkg:string, name:string, arg?:any){\r\n\r\n        //1, 检查栈中是否存在此页面\r\n        let len = this.m_pageTrackStack.length;\r\n        for(let i = len-1; i >= 0 ;i--){\r\n            let track = this.m_pageTrackStack[i];\r\n            if(track.pkg == pkg && track.name == name){\r\n                \r\n                this.distroyAllLoadedPanel();\r\n                this.distroyPanel(this.m_currentPage.ui);\r\n               \r\n                track.ui.visible = true;\r\n                track.ui.onShow(track.arg);\r\n               \r\n                \r\n                //卸载此页栈上面的界面\r\n                for(let j = len -1; j > i; j--){\r\n                    let del_track = this.m_pageTrackStack[j];\r\n                    this.distroyPanel(del_track.ui);\r\n                    this.m_pageTrackStack.slice(j,1);\r\n                }\r\n               \r\n                this.m_currentPage = this.m_pageTrackStack.pop();\r\n                return this.m_currentPage;\r\n            }\r\n        }\r\n\r\n        //2 先把当前Page入栈\r\n        if(this.m_currentPage != undefined && this.m_currentPage.name!=name){\r\n            this.m_pageTrackStack.push(this.m_currentPage);\r\n        }\r\n\r\n        //将栈中其它Page 设为不可见\r\n        for(let track of this.m_pageTrackStack){\r\n            track.ui.visible = false;\r\n        }\r\n\r\n        await this.openPageWorker(pkg, name, arg);\r\n    }\r\n\r\n\r\n    //返回上一个页面\r\n    public async goBackPage(){\r\n\r\n        if(this.m_pageTrackStack.length > 0){\r\n\r\n            //关闭当前页面\r\n            this.distroyAllLoadedPanel();\r\n            this.distroyPanel(this.m_currentPage.ui);\r\n\r\n            //打开堆栈中的上一页面\r\n            let track = this.m_pageTrackStack.pop();\r\n            track.ui.visible = true;\r\n            this.m_currentPage = track;\r\n\r\n            track.ui.onShow(track.arg);\r\n    \r\n            \r\n        }else{\r\n            await this.enterMainPage();\r\n        }\r\n    }\r\n\r\n\r\n\r\n    //回到主城\r\n    public enterMainPage():void{\r\n\r\n         //将栈中其它Page 设为不可见\r\n         for(let track of this.m_pageTrackStack){\r\n            this.distroyPanel(track.ui);\r\n        }\r\n        this.m_pageTrackStack.length = 0;\r\n    }\r\n\r\n    //==========================================================UILoading\r\n    //打开Loading界面\r\n    public async openLoading(pkg:string, name:string, arg?:any){\r\n        if(!this.m_loadingPage){\r\n            this.m_loadingPage = UIFactory.createUI(pkg, name);\r\n        }\r\n        (this.m_loadingPage as any)._internalOpen(arg);\r\n       \r\n    }\r\n\r\n    //关闭Loading界面\r\n    public closeLoading(arg?:any):void{\r\n        if(this.m_loadingPage){\r\n            this.m_loadingPage.close(arg);\r\n        }\r\n    }\r\n\r\n    //==========================================================UIWindow\r\n    //打开窗口\r\n    public async openWindow(pkg:string, name:string, arg:any){\r\n\r\n        let ui:UIWindow = await this.open(pkg, name, arg);\r\n\r\n        return ui;\r\n    }\r\n\r\n    //关闭窗口\r\n    public closeWindow(name:string, arg:any){\r\n\r\n        let ui:UIWindow = this.getPanelUI(name) as UIWindow;\r\n        if(ui != null){\r\n            ui.close(arg);\r\n        }\r\n    }\r\n\r\n    //==========================================================UIWidget\r\n    //打开Widiget\r\n    public async openWidget(pkg:string, name:string, arg:any){\r\n\r\n        let ui:UIWidge = await this.open(pkg, name, arg);\r\n\r\n        return ui;\r\n    }\r\n\r\n    //u关闭Widiget\r\n    public closeWidget(name:string, arg:any){\r\n\r\n        let ui:UIWidge = this.getPanelUI(name) as UIWidge;\r\n        if(ui!=null){\r\n            ui.close(arg);\r\n        }\r\n    }\r\n\r\n    public closeAllPanels(){\r\n        //删除除Loading界面外的所有Window, Widget\r\n        this.distroyAllLoadedPanel();\r\n        //删除所有Page\r\n        let len = this.m_pageTrackStack.length;\r\n        for(let i = len-1; i >= 0 ;i--){\r\n            let track = this.m_pageTrackStack[i];\r\n            \r\n            this.distroyPanel(track.ui);\r\n            this.m_pageTrackStack.slice(i,1);\r\n        }\r\n    }\r\n}"]}