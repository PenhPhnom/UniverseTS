{"version":3,"file":"Logger.js","sourceRoot":"","sources":["../../../../src/framework/logger/Logger.ts"],"names":[],"mappings":"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","sourcesContent":["import { UnityEngine } from 'csharp';\r\nimport { GameConfig } from '../../global/GameConfig';\r\nenum LogType {\r\n\tError = 0,\r\n\tAssert = 1,\r\n\tWarning = 2,\r\n\tLog = 3,\r\n\tException = 4\r\n}\r\n\r\nexport class Logger{\r\n    private  static  unity_log_target = null;\r\n\r\n    static getPrintStack(type: LogType, showStack : boolean, ...args) {\r\n        let message = '';\r\n        for (let i = 0; i < args.length; i++) {\r\n            const element = args[i];\r\n            if (typeof element === 'object' && Logger.LOG_OBJECT_TO_JSON) {\r\n                message += JSON.stringify(element);\r\n            } else {\r\n                message += element;\r\n            }\r\n            if (i < args.length - 1) {\r\n                message += ' ';\r\n            }\r\n        }\r\n    \r\n        if (showStack || UnityEngine.Application.isEditor) {\r\n            var stacks = new Error().stack.split('\\n');\r\n            for (let i = 3; i < stacks.length; i++) {\r\n                const line = stacks[i];\r\n                message += '\\n';\r\n                message += line;\r\n            }\r\n        }\r\n    \r\n        if (!Logger.unity_log_target) {\r\n            Logger.unity_log_target = new UnityEngine.Object();\r\n        }\r\n\r\n        return message;\r\n    }\r\n\r\n    \r\n\r\n\tstatic log(...args): void{\r\n        if(!GameConfig.debug) return;\r\n\r\n        let msg = Logger.getPrintStack(LogType.Log, true, args);\r\n        console.log(msg);\r\n    }\r\n\r\n\t/**\r\n\t * Outputs a warning message to the Logger.\r\n\t * @param message  list of JavaScript objects to output. The string representations of each of these objects are appended together in the order listed and output.\r\n\t */\r\n\tstatic warn(...args): void{\r\n        if(!GameConfig.debug) return;\r\n\r\n        let msg = Logger.getPrintStack(LogType.Warning, true, args);\r\n        console.warn(msg);\r\n    }\r\n\r\n\t/**\r\n\t * Outputs an error message to the Logger.\r\n\t * @param message A list of JavaScript objects to output. The string representations of each of these objects are appended together in the order listed and output.\r\n\t */\r\n\tstatic error(...args): void{\r\n        if(!GameConfig.debug) return;\r\n\r\n        let msg = Logger.getPrintStack(LogType.Error, true, args);\r\n        console.error(msg);\r\n    }\r\n\r\n\t/** Outputs a stack trace to the Logger.\r\n\t * @param message A list of JavaScript objects to output. The string representations of each of these objects are appended together in the order listed and output.\r\n\t*/\r\n\tstatic trace(...args): void{\r\n        if(!GameConfig.debug) return;\r\n        \r\n        let msg = Logger.getPrintStack(LogType.Log, true, args);\r\n        console.log(msg);\r\n    }\r\n\r\n\t/** Log JavaScript Objects as JSON format */\r\n\tstatic LOG_OBJECT_TO_JSON(...args): boolean{\r\n\r\n        return false;\r\n    }\r\n\r\n}"]}