{"version":3,"file":"SceneManager.js","sourceRoot":"","sources":["../../../../src/framework/scene/SceneManager.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAChD,OAAO,EAAE,SAAS,EAAE,MAAM,4BAA4B,CAAC;AACvD,OAAO,EAAE,CAAC,EAAE,MAAM,yBAAyB,CAAC;AAC5C,OAAO,EAAE,SAAS,EAAE,MAAM,qBAAqB,CAAC;AAChD,OAAO,EAAE,MAAM,EAAE,MAAM,kBAAkB,CAAC;AAE1C,OAAO,EAAE,YAAY,EAAE,MAAM,gBAAgB,CAAC;AAK9C,MAAM,OAAO,YAAa,SAAQ,SAAuB;IAIrD;QACI,KAAK,EAAE,CAAC;QAHJ,iBAAY,GAAa,IAAI,CAAC;IAItC,CAAC;IAEM,KAAK,CAAC,SAAS,CAAC,KAAY;QAE/B,IAAG,CAAC;YAEA,aAAa;YACb,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,QAAQ,CAAC,WAAW,EAAE,QAAQ,CAAC,aAAa,CAAC,CAAC;YAEtE,OAAO;YACP,IAAG,IAAI,CAAC,YAAY,EAAC,CAAC;gBAClB,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;gBAC5B,IAAI,CAAC,YAAY,CAAC,SAAS,EAAE,CAAC;YAClC,CAAC;YAED,QAAQ;YACR,IAAI,aAAa,GAAG,MAAM,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;YAExD,aAAa;YACb,IAAI,CAAC,YAAY,GAAI,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACrD,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;YAClD,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;YAE5B,iBAAiB;YACjB,IAAI,gBAAgB,GAAG,WAAW,CAAC,GAAE,EAAE;gBAEnC,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,GAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC;gBAC1E,MAAM,CAAC,GAAG,CAAC,WAAW,GAAC,QAAQ,GAAG,KAAK,GAAC,IAAI,CAAC,YAAY,CAAC,WAAW,GAAG,KAAK,GAAC,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;gBAE5G,CAAC,CAAC,eAAe,CAAC,SAAS,CACvB,SAAS,CAAC,kBAAkB,EAC5B,QAAQ,GAAC,GAAG,CAAC,CAAC;YAEtB,CAAC,EAAE,GAAG,CAAC,CAAC;YAER,MAAM;YACN,MAAM,IAAI,CAAC,YAAY,CAAC,eAAe,EAAE,CAAC;YAE1C,MAAM;YACN,aAAa,CAAC,gBAAgB,CAAC,CAAA;YAE9B,UAAU;YACV,CAAC,CAAC,SAAS,CAAC,cAAc,EAAE,CAAC;YAE9B,MAAM,IAAI,CAAC,YAAY,CAAC,UAAU,EAAE,CAAA;YACpC,CAAC,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;QAE/B,CAAC;QAAA,OAAM,EAAE,EAAC,CAAC;YACP,MAAM,CAAC,GAAG,CAAC,mBAAmB,GAAC,EAAE,CAAC,CAAC;QACvC,CAAC;IAEL,CAAC;CAKJ","sourcesContent":["import { commonUI } from \"../../data/ui/common\";\r\nimport { UIMessage } from \"../../game/event/UIMessage\";\r\nimport { S } from \"../../global/GameConfig\";\r\nimport { Singleton } from \"../common/Singleton\";\r\nimport { Logger } from \"../logger/Logger\";\r\nimport { BaseScene } from \"./BaseScene\";\r\nimport { SceneFactory } from \"./SceneFactory\";\r\n\r\n\r\n\r\n\r\nexport class SceneManager extends Singleton<SceneManager>{\r\n\r\n    private currentScene:BaseScene = null;\r\n\r\n    constructor(){\r\n        super();\r\n    }\r\n\r\n    public async loadScene(scene:string){\r\n        \r\n        try{\r\n\r\n            //打开Loading界面\r\n            S.UIManager.openLoading(commonUI.PackageName, commonUI.UILoadingPage);\r\n\r\n            //清理旧场景\r\n            if(this.currentScene){\r\n                this.currentScene.onLeave();\r\n                this.currentScene.onDestroy();\r\n            }\r\n\r\n            //开始加载场景\r\n            let sceneInstance = await S.ResManager.loadScene(scene);\r\n\r\n            //开始加载进入场景的资源\r\n            this.currentScene =  SceneFactory.createScene(scene);\r\n            this.currentScene.setSceneInstance(sceneInstance);\r\n            this.currentScene.onEnter();\r\n\r\n            //设置当前场景加载进度Timer\r\n            let progressInterval = setInterval(()=>{\r\n\r\n                let progress = this.currentScene.finishCount/this.currentScene.totalCount;\r\n                Logger.log(\"progress:\"+progress + \" = \"+this.currentScene.finishCount + \" = \"+this.currentScene.totalCount);\r\n\r\n                S.UIMessageManger.broadcast(\r\n                    UIMessage.MSG_SCENE_PROGRESS,\r\n                    progress*100);\r\n\r\n            }, 100);\r\n\r\n            //加载资源\r\n            await this.currentScene.loadAssetsAsync();\r\n\r\n            //加载完成\r\n            clearInterval(progressInterval)\r\n\r\n             //关闭所有Page\r\n             S.UIManager.closeAllPanels();\r\n\r\n            await this.currentScene.onComplete()\r\n            S.UIManager.closeLoading();\r\n\r\n        }catch(ex){\r\n            Logger.log(\"load scene excep:\"+ex);\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    \r\n}"]}