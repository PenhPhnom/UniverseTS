{"version":3,"file":"BaseScene.js","sourceRoot":"","sources":["../../../../src/framework/scene/BaseScene.ts"],"names":[],"mappings":"AACA,OAAO,EAAE,CAAC,EAAE,MAAM,yBAAyB,CAAC;AAE5C,MAAM,OAAgB,SAAS;IAQ3B;QAHO,gBAAW,GAAG,CAAC,CAAC;QAChB,eAAU,GAAG,CAAC,CAAC;QAGlB,IAAI,CAAC,aAAa,GAAG,IAAI,GAAG,EAAiB,CAAC;QAC9C,IAAI,CAAC,WAAW,GAAG,CAAC,CAAC;IACzB,CAAC;IAEM,gBAAgB,CAAC,OAAc,EAAE,SAAS;QAC7C,IAAG,CAAC,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,EACnC,CAAC;YACG,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;YAC3C,OAAM;QACV,CAAC;QACD,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,aAAa,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,SAAS,CAAC,CAAC;IACjF,CAAC;IAEM,gBAAgB,CAAC,aAA4E;QAChG,IAAI,CAAC,aAAa,GAAG,aAAa,CAAC;IACvC,CAAC;IAMM,KAAK,CAAC,eAAe;QAExB,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC;QAE1C,IAAI,QAAQ,GAAG,EAAE,CAAC;QAElB,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,KAAK,EAAE,GAAG,EAAC,EAAE;YACrC,IAAI,OAAO,GAAG,CAAC,CAAC,cAAc,CAAC,sBAAsB,CAAC,GAAG,EAAE,KAAK,EAAC,GAAE,EAAE;gBACjE,IAAI,CAAC,WAAW,EAAE,CAAC;YACvB,CAAC,CAAC,CAAA;YACF,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC3B,CAAC,CAAC,CAAC;QAEH,MAAM,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;IAChC,CAAC;IAEM,SAAS;QAEZ,QAAQ;QACR,CAAC,CAAC,cAAc,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAE/B,MAAM;QACN,CAAC,CAAC,UAAU,CAAC,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAE7C,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAC/B,CAAC;CACJ","sourcesContent":["import { UnityEngine } from \"csharp\";\r\nimport { S } from \"../../global/GameConfig\";\r\n\r\nexport abstract class BaseScene{\r\n\r\n    private preloadPrefab:Map<string,number>;\r\n    private sceneInstance:UnityEngine.ResourceManagement.ResourceProviders.SceneInstance\r\n\r\n    public finishCount = 0;\r\n    public totalCount = 0;\r\n\r\n    constructor(){\r\n        this.preloadPrefab = new Map<string,number>();\r\n        this.finishCount = 0;\r\n    }\r\n\r\n    public addPreloadPrefab(address:string, instCount){\r\n        if(!this.preloadPrefab.has(address))\r\n        {\r\n            this.preloadPrefab.set(address, instCount);\r\n            return\r\n        }\r\n        this.preloadPrefab.set(address, this.preloadPrefab.get(address) + instCount);\r\n    }\r\n\r\n    public setSceneInstance(sceneInstance:UnityEngine.ResourceManagement.ResourceProviders.SceneInstance){\r\n        this.sceneInstance = sceneInstance;\r\n    }\r\n\r\n    public abstract onEnter();\r\n    public abstract onComplete();\r\n    public abstract onLeave();\r\n\r\n    public async loadAssetsAsync(){\r\n\r\n        this.totalCount = this.preloadPrefab.size;\r\n\r\n        let premises = [];\r\n\r\n        this.preloadPrefab.forEach((value, key)=>{\r\n            let premise = S.GameObjectPool.preLoadGameObjectAsync(key, value,()=>{\r\n                this.finishCount++;\r\n            })\r\n            premises.push(premise);\r\n        });\r\n\r\n        await Promise.all(premises);\r\n    }\r\n\r\n    public onDestroy(){\r\n \r\n        //清理资源缓存\r\n        S.GameObjectPool.cleanup(true);\r\n\r\n        //卸载场景\r\n        S.ResManager.unloadScene(this.sceneInstance);\r\n        \r\n        this.preloadPrefab.clear();\r\n    }\r\n}"]}