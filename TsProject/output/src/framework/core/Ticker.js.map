{"version":3,"file":"Ticker.js","sourceRoot":"","sources":["../../../../src/framework/core/Ticker.ts"],"names":[],"mappings":"AAAA,OAAO,KAAK,MAAM,SAAS,CAAC;AAK5B,oEAAoE;AAEpE,MAAM,OAAO,MAAM;IAWf,IAAI,KAAK,KAAK,OAAO,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC;IAEnC,IAAI,KAAK,CAAC,KAAK,IAAE,IAAI,CAAC,MAAM,GAAC,KAAK,CAAC,CAAA,CAAC;IAAA,CAAC;IACrC,YACI,KAAa,EACb,cAA8B,EAC9B,kBAAkC,EAClC,WAAwB,EACxB,eAA4B;QAE5B,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;QACpB,IAAI,CAAC,eAAe,GAAG,cAAc,CAAC;QACtC,IAAI,CAAC,mBAAmB,GAAG,kBAAkB,CAAC;QAC9C,IAAI,CAAC,YAAY,GAAG,WAAW,CAAC;QAChC,IAAI,CAAC,gBAAgB,GAAG,eAAe,CAAC;QAExC,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;IAC3B,CAAC;IAED,IAAI,CAAC,EAAU;QACX,IAAI,CAAC,SAAS,IAAI,EAAE,CAAC;QAErB,cAAc;QACd,IAAI,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,IAAI,CAAC,aAAa,CAAC;QAC1D,IAAI,MAAM,EAAE,CAAC;YACT,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,aAAa,CAAC;YACrC,IAAI,CAAC,aAAa,GAAG,CAAC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;YAC7D,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACpD,CAAC;QAED,SAAS;QACT,IAAI,UAAU,GAAG,IAAI,CAAC,aAAa,EAAE,CAAC;QACtC,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;QAErD,kBAAkB;QAClB,IAAI,MAAM,EAAE,CAAC;YACT,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;QACxD,CAAC;QAED,aAAa;QACb,IAAI,CAAC,mBAAmB,CAAC,EAAE,EAAE,IAAI,CAAC,SAAS,EAAE,UAAU,CAAC,CAAC;IAC7D,CAAC;IAED,SAAS;QACL,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,CAAC,SAAS,GAAG,CAAC,CAAC;QACnB,IAAI,CAAC,aAAa,GAAG,CAAC,CAAC;IAC3B,CAAC;IAEO,aAAa;QACjB,OAAO,KAAK,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC;IAC/E,CAAC;CACJ","sourcesContent":["import Utils from \"./Utils\";\r\n\r\ntype RealtimeTickFn = (dt: number, time: number, frameRatio: number) => void;\r\ntype FixedTickFn = (dt: number, time: number) => void;\r\n\r\n// NOTE: 时序是: FixedTicker => Ticker => PostFixedTicker => PostTicker\r\n\r\nexport class Ticker {\r\n    private _delta: number;\r\n    private _realtimeTicker: RealtimeTickFn;\r\n    private _postRealtimeTicker: RealtimeTickFn;\r\n    private _fixedTicker: FixedTickFn;\r\n    private _postFixedTicker: FixedTickFn;\r\n\r\n    private _realTime: number;\r\n    private _fixedTime: number;\r\n    private _nextTickTime: number;\r\n\r\n    get delta() { return this._delta; }\r\n\r\n    set delta(value){this._delta=value;};\r\n    constructor(\r\n        delta: number,\r\n        realtimeTicker: RealtimeTickFn,\r\n        postRealtimeTicker: RealtimeTickFn,\r\n        fixedTicker: FixedTickFn,\r\n        postFixedTicker: FixedTickFn) {\r\n\r\n        this._delta = delta;\r\n        this._realtimeTicker = realtimeTicker;\r\n        this._postRealtimeTicker = postRealtimeTicker;\r\n        this._fixedTicker = fixedTicker;\r\n        this._postFixedTicker = postFixedTicker;\r\n\r\n        this._realTime = 0;\r\n        this._fixedTime = 0;\r\n        this._nextTickTime = 0;\r\n    }\r\n\r\n    tick(dt: number) {\r\n        this._realTime += dt;\r\n\r\n        // FixedTicker\r\n        let ticked = this._realTime.fixed() >= this._nextTickTime;\r\n        if (ticked) {\r\n            this._fixedTime = this._nextTickTime;\r\n            this._nextTickTime = (this._fixedTime + this._delta).fixed();\r\n            this._fixedTicker(this._delta, this._fixedTime);\r\n        }\r\n\r\n        // Ticker\r\n        let frameRatio = this.getFrameRatio();\r\n        this._realtimeTicker(dt, this._realTime, frameRatio);\r\n\r\n        // PostFixedTicker\r\n        if (ticked) {\r\n            this._postFixedTicker(this._delta, this._fixedTime);\r\n        }\r\n\r\n        // PostTicker\r\n        this._postRealtimeTicker(dt, this._realTime, frameRatio);\r\n    }\r\n\r\n    resetTime() {\r\n        this._fixedTime = 0;\r\n        this._realTime = 0;\r\n        this._nextTickTime = 0;\r\n    }\r\n\r\n    private getFrameRatio(): number {\r\n        return Utils.clamp((this._realTime - this._fixedTime) / this._delta, 0, 1);\r\n    }\r\n}"]}