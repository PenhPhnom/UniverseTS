{"version":3,"file":"SyncDebugger.js","sourceRoot":"","sources":["../../../../../src/framework/core/ECS/SyncDebugger.ts"],"names":[],"mappings":"AAAA,MAAM,OAAO,YAAY;IAAzB;QACY,YAAO,GAAU,EAAE,CAAC;IAmDhC,CAAC;IAhDG,SAAS,CAAC,CAAM,EAAE,CAAO,EAAE,CAAO,EAAE,CAAO,EAAE,CAAO;QAChD,6BAA6B;QAE7B,kCAAkC;QAElC,kBAAkB;QAClB,2CAA2C;QAC3C,2CAA2C;QAC3C,2CAA2C;QAC3C,2CAA2C;QAE3C,uCAAuC;QACvC,sBAAsB;QACtB,cAAc;QACd,IAAI;QAEJ,gCAAgC;QAChC,sBAAsB;QACtB,4DAA4D;QAC5D,kDAAkD;QAClD,yBAAyB;QACzB,iBAAiB;QACjB,QAAQ;QACR,IAAI;QAEJ,gBAAgB;QAChB,qCAAqC;QACrC,gFAAgF;QAChF,sEAAsE;QACtE,gBAAgB;QAChB,IAAI;IACR,CAAC;IAED,WAAW;QACP,2BAA2B;IAC/B,CAAC;IAED,YAAY,CAAC,GAAW;QACpB,8CAA8C;QAC9C,sCAAsC;QACtC,mCAAmC;QACnC,0DAA0D;QAC1D,yBAAyB;IAC7B,CAAC;IAED,cAAc,CAAC,WAAkB;QAC7B,mCAAmC;IACvC,CAAC;CACJ","sourcesContent":["export class SyncDebugger {\r\n    private _record: any[] = [];\r\n    private _debugRecord: any[];\r\n\r\n    addRecord(a: any, b?: any, c?: any, d?: any, e?: any) {\r\n        // let record = this._record;\r\n\r\n        // let startIndex = record.length;\r\n\r\n        // record.push(a);\r\n        // if (b !== undefined) { record.push(b); }\r\n        // if (c !== undefined) { record.push(c); }\r\n        // if (d !== undefined) { record.push(d); }\r\n        // if (e !== undefined) { record.push(e); }\r\n\r\n        // let debugRecord = this._debugRecord;\r\n        // if (!debugRecord) {\r\n        //     return;\r\n        // }\r\n\r\n        // let endIndex = record.length;\r\n        // let failed = false;\r\n        // for (let index = startIndex; index < endIndex; index++) {\r\n        //     if (debugRecord[index] !== record[index]) {\r\n        //         failed = true;\r\n        //         break;\r\n        //     }\r\n        // }\r\n\r\n        // if (failed) {\r\n        //     console.error(\"sync failed.\");\r\n        //     console.error(`DebugRecord: ${debugRecord.slice(startIndex, endIndex)}`);\r\n        //     console.error(`Record: ${record.slice(startIndex, endIndex)}`);\r\n        //     debugger;\r\n        // }\r\n    }\r\n\r\n    clearRecord() {\r\n        // this._record.length = 0;\r\n    }\r\n\r\n    uploadRecord(url: string) {\r\n        // let content = JSON.stringify(this._record);\r\n        // let request = new XMLHttpRequest();\r\n        // request.open(\"POST\", url, true);\r\n        // request.setRequestHeader(\"Content-type\", \"text/plain\");\r\n        // request.send(content);\r\n    }\r\n\r\n    setDebugRecord(debugRecord: any[]) {\r\n        // this._debugRecord = debugRecord;\r\n    }\r\n}"]}