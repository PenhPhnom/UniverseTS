{"version":3,"file":"EntityContext.js","sourceRoot":"","sources":["../../../../../src/framework/core/ECS/EntityContext.ts"],"names":[],"mappings":"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","sourcesContent":["import { TypedObjectPool } from \"../../common/TypedObjectPool\";\r\nimport { Entity } from \"./Entity\";\r\nimport { ComponentGroupContext } from \"./GroupContext\";\r\nimport { SyncDebugger } from \"./SyncDebugger\";\r\n\r\ntype Class<T> = new (...args: any[]) => T;\r\n\r\nexport enum CompFieldType {\r\n    Normal,\r\n    Array,\r\n    Map,\r\n    Slot\r\n}\r\n\r\nexport interface ICompFieldDesc {\r\n    type: CompFieldType;\r\n    name: string;\r\n}\r\n\r\nlet gClassSpecFieldMap: { [name: string]: ICompFieldDesc[][] } = {};\r\n\r\nexport class EntityContext {\r\n    private _compGroupCtx: ComponentGroupContext;\r\n    private _name: string;\r\n    private _nextID: number = 1;\r\n    private _entityPool: TypedObjectPool<Entity>;\r\n    private _entityMap: { [key: number]: Entity } = {};\r\n    private _debugger: SyncDebugger;\r\n    private _classIDKey: string;\r\n    private _fieldConvertorMap: { [name: string]: Function } = {};\r\n    private _singletonMap: { [id: number]: Entity } = {};\r\n\r\n    get contextName() { return this._name; }\r\n    get componentGroupContext() { return this._compGroupCtx; }\r\n    get entityMap() { return this._entityMap; }\r\n    // get debugger() { return this._debugger; }\r\n\r\n    constructor(name: string, cls: any) {\r\n        this._name = name;\r\n        this._classIDKey = \"__compid_\" + name;\r\n        this._entityPool = new TypedObjectPool(cls);\r\n        this._compGroupCtx = new ComponentGroupContext(this);\r\n        this._debugger = new SyncDebugger();\r\n    }\r\n\r\n    reset() {\r\n        this._debugger.clearRecord();\r\n        this._compGroupCtx.reset();\r\n        this._nextID = 1;\r\n\r\n        let entityMap = this._entityMap;\r\n        let pool = this._entityPool;\r\n\r\n        for (let id in entityMap) {\r\n            let entity = entityMap[id];\r\n            entity.reset();\r\n            pool.recover(entity);\r\n        }\r\n        this._entityMap = {};\r\n        this._singletonMap = {};\r\n    }\r\n\r\n    clear() {\r\n        let entityMap = this._entityMap;\r\n        let pool = this._entityPool;\r\n\r\n        for (let id in entityMap) {\r\n            let entity = entityMap[id];\r\n            entity.reset();\r\n            pool.recover(entity);\r\n            delete entityMap[id];\r\n        }\r\n\r\n        this._compGroupCtx.clear();\r\n    }\r\n\r\n    entityMapAs<T>(): { [key: number]: T } {\r\n        return <{ [key: number]: T }><any>this._entityMap;\r\n    }\r\n\r\n    get<T>(id: number): Entity & T {\r\n        return <Entity & T><any>(this._entityMap[id]);\r\n    }\r\n\r\n    getAs<T0, T1, T2, T3, T4>(id: number, cls0: Class<T0>, cls1?: Class<T1>, cls2?: Class<T2>, cls3?: Class<T3>, cls4?: Class<T4>) {\r\n        let result = this._entityMap[id];\r\n        return result ? result.get(cls0, cls1, cls2, cls3, cls4) : null;\r\n    }\r\n\r\n    create(): Entity {\r\n        let entity = this._entityPool.get();\r\n        let id = this._nextID++;\r\n        entity.init(this, id);\r\n        this._entityMap[id] = entity;\r\n        return entity;\r\n    }\r\n\r\n    recover(entity: Entity): void {\r\n        delete this._entityMap[entity.id];\r\n        entity.beforeRecover();\r\n        this._entityPool.recover(entity);\r\n    }\r\n\r\n    postTick() {\r\n        this._compGroupCtx.resetEvents();\r\n    }\r\n\r\n    getOrRegClassID(cls: any): number {\r\n        let classID = cls[this._classIDKey];\r\n        if (classID !== undefined) {\r\n            return classID;\r\n        }\r\n\r\n        let specFields = gClassSpecFieldMap[this._name];\r\n        if (!specFields) {\r\n            specFields = gClassSpecFieldMap[this._name] = [];\r\n        }\r\n\r\n        let descs: ICompFieldDesc[] = [];\r\n        let defInst = new cls();\r\n        // 标记特殊字段.\r\n        for (let key of Object.getOwnPropertyNames(defInst)) {\r\n            let type = CompFieldType.Normal;\r\n\r\n            // List/Map/Slot\r\n            let end4Char = key.substr(-4);\r\n            if (end4Char == 'List') {\r\n                type = CompFieldType.Array;\r\n            } else if (end4Char == 'Slot') {\r\n                type = CompFieldType.Slot;\r\n            } else {\r\n                let end3Char = key.substr(-3);\r\n                if (end3Char == 'Map') {\r\n                    type = CompFieldType.Map;\r\n                }\r\n            }\r\n\r\n            if (type != CompFieldType.Normal) {\r\n                descs.push({\r\n                    type: type,\r\n                    name: key,\r\n                });\r\n            }\r\n        }\r\n\r\n        specFields.push(descs);\r\n        classID = specFields.length - 1;\r\n\r\n        if (classID >= 96) {\r\n            // debugger;\r\n            // throw new Error(\"too much component type\")\r\n            console.error(\"too much component type\");\r\n        }\r\n\r\n        cls[this._classIDKey] = classID;\r\n        return classID;\r\n    }\r\n\r\n    regFieldConvertor(name: string, convertor: Function) {\r\n        this._fieldConvertorMap[name] = convertor;\r\n    }\r\n\r\n    getCompSpecFieldDesc(classID: number) {\r\n        return gClassSpecFieldMap[this._name][classID];\r\n    }\r\n\r\n    getFieldConvertor(name: string): Function {\r\n        return this._fieldConvertorMap[name];\r\n    }\r\n\r\n    hasSingleton(id: number): boolean {\r\n        return !!this._singletonMap[id];\r\n    }\r\n\r\n    singleton(id: number): Entity {\r\n        let entity = this._singletonMap[id];\r\n        if (entity) {\r\n            return entity;\r\n        }\r\n\r\n        entity = this._singletonMap[id] = this.create();\r\n        return entity;\r\n    }\r\n}"]}